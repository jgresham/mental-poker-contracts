// SPDX-License-Identifier: MIT
pragma solidity ^0.8.29;

import "forge-std/Test.sol";
import "../src/TexasHoldemRoom.sol";
import "../src/PokerHandEvaluatorv2.sol";
import "../src/BigNumbers/BigNumbers.sol";
import "../src/CryptoUtils.sol";

contract TexasHoldemRoomRealKeysShuffledOnceTest is Test {
    using BigNumbers for BigNumber;

    TexasHoldemRoom public room;
    PokerHandEvaluatorv2 public pokerHandEvaluator;
    DeckHandler public deckHandler;
    address public player1;
    address public player2;
    address public player3;
    uint256 constant SMALL_BLIND = 10;
    uint256 constant INITIAL_BALANCE = 1000;
    CryptoUtils public cryptoUtils;
    BigNumber publicKey1;
    BigNumber privateKey1;
    BigNumber c1p1;
    BigNumber r1;
    BigNumber c1Inverse1;
    BigNumber c1InversePowPrivate1;
    bytes[] encryptedDeck1bytes;

    BigNumber publicKey2;
    BigNumber privateKey2;
    BigNumber c1p2;
    BigNumber r2;
    BigNumber c1Inverse2;
    BigNumber c1InversePowPrivate2;
    bytes[] encryptedDeck2bytes;

    function setUp() public {
        cryptoUtils = new CryptoUtils();
        pokerHandEvaluator = new PokerHandEvaluatorv2();
        room = new TexasHoldemRoom(address(cryptoUtils), SMALL_BLIND, false);
        deckHandler =
            new DeckHandler(address(room), address(cryptoUtils), address(pokerHandEvaluator));
        room.setDeckHandler(address(deckHandler));
        encryptedDeck1bytes = new bytes[](52);
        encryptedDeck2bytes = new bytes[](52);
        encryptedDeck1bytes[0] =
            hex"7a8bc8dc20aeb95234f376b02e1e5f0e3eba5bdc81ca093790a9e51b8d906f2b26f9f1edc31c6f159789b29c0e5cea7635ca8237d9e19ee454edb250968c95a6c17b514f6254cc6d33342bd7571a85e0595ea17aad1f9943893348e132b06c7caa07bfbdf170cbf217f6aae10b5eb70656f5e9fc3f03326dad6c1280097799cf6c6606c7eebaf59f15085e9fe5b765b9a434639826c474997bd228359fd3280f2f5290b38679fd98ff7f19884a11b8ad55f6d5ee4dcf5ac919b4e80c7e9a7571fa083807c1c3214be32c73ba85169499a9f855a7c202ed6f4b7ba564ded5288858d733c90540f0f48828fd4ac7b8c9dfc0f391fcf0aa6f4ddf0c06ae8eceeec5";
        encryptedDeck1bytes[1] =
            hex"d3d03af4ddb6bd8b50c5f0e2c2c017e82ad73d5bf6f54244d3edbff5ed4734c107dff3deeb8f215d4f80981d212119970ca252013798a57290621880dbf3dbb5d16eaa5b0fe2a14a5a992529ec4d69695841250fbc4fb4bb80a6314f7cf910f116bdd8b29d21dc4b1a85230b27440ef877998fbeb8fc239f15e700184bfed28ab619a8709b2a641f29299d8f64fea837360c6810a2c84712ad6fd65256285665bf941882d92814642da3349703d8f4782799432ddcf94641db4ea0d21e0840f8b84de21a02ca50c01c90926904917105ecdfd17284481dec918909e5d7ffa3261c9eac33da18ca9d977f08eb283245c5e864217dfeabee7700802a67b3580f88";
        encryptedDeck1bytes[2] =
            hex"dfd18c3abc33beb398fadc327bb1ca1727ac3b0d3d468ee1ed8738f0fbe79236026261c31f1f7fc8daec80459d651b7a2da22ffe4794e037bab925660a1d5ffe7d15956a6385b4fa37bb429ca8683729d3862fd4673c60b07574f17881076f15a7e83a0ece732384f6d4b4a96576895390a11efcab21b3e9d24b1d29770de9750563bfddaceb2e12acd02c99caeb006a79714c750eff5ac7166416dd22352dce63997d8f915881a6cf2a9f2b2ceaff5144dafdbe5ecd3b7a13f26004a195d54e109c8e01dbeef5feda6f4db7dbcdaee0bf0d37d4dbff402cd2d1036360283585596e2b7659161edd5110e2596af539c252d157be3caa254dfff945a4b89deaab";
        encryptedDeck1bytes[3] =
            hex"edf4bca662704a857a58d63a20fea5f375afe76cc8abd95563ee8dd884761ae9552fc3ab50c7cbed00564f6d956bd3ef4174b78ef90a1946b1fc2c63fabb349d9e3d028029bf4cabbb7ba8f18ef280c1405096ea94b0b08941f5d49b690dabdfec4c98a3801e22f03313f180b4e5133e8dca5e59042c9bb4984225899029ad5e4e806dfd6fedf2bd2af5df0fd341096da8f67a9fa664c76e95b3f8d63b75b94ce2ab6a9e52f15df30bc63525df3a96f7571733ab221f9f2394761ea34d682786fab17cbf84ffccf5b6e27c7d8b9f656cc8c12ad53e08325d1b9ebbef3e497d112d2c916f566bd437f458aaaa276f71ebeae0e330883c420c5d2e3648c461fb97";
        encryptedDeck1bytes[4] =
            hex"fa24b0d198ec2b13689a65ea40c7c30d541d94a7d5ccaf3809b22f37d67f22f93e416412047db11fb2254a151df4716b8a5998f8736350c5800c9b72ce46e754e4db1685e3f4f87e9d9198da8fc53e1545fc67dc95613429235fe7bf807b76d18b985044de62660284ef268bf196ce6e7eb4c0c4b0c760309ec2a40b13d906f7a47369754c5bd7ed99e143866669aaa371a009a3b5ce8dfd2e432fd01773c190d97c90a655d2a2343746b7d44e92454fc9343ddb77e4e6eb252312de302ce33441b678c2c97c2e366ad6f78c55d38d99e58031d4fc4c8d7200f04957e32616337609314ae8b464441fac6581e065d8f133674d7c06866497a42075c3110fd7eb";
        encryptedDeck1bytes[5] =
            hex"831233d52fcbac8d94d78dc454d1d92e1785e0f175edf5f73af351fd6a63ac6ed9165df33da7ad2e7c9e78ad3c39986353737457e76e4ef2baee809517c752395a8bf6eee92383018c5f7e7a9536b7f72426ad005ae145c37869d176c163f4b1d4b6456246e05451fb5d69046ea5b1c17902a0a3b6102fad3b26430538d15261ec69dd0ca0f0a2513e00e0364a918ac16be93bfdc991ba31aeacd6e9491b48bf2875d93317b2f1af6e2cef69a230dcae4f49a6b9f8167a9c0feef2ea086ca81270a67f3840e5ee6538f0a0f4a3da30cdd723980ee628d7d647b8a0d03275597547f8f531d37c10e7257a53623a900a1dd5325329141b221b45410d2032541461";
        encryptedDeck1bytes[6] =
            hex"a966a9b1eb011a15acac02cbd2d9845340cc383d54c562ea70b7c13f539b9aa70f77ce2656963cf0df432aa5390cf037d12abb4f2338fa45aa9903870a1a5dd86df86319bd35da35cf57f22b38ae8ca311e1efcd33f2c5311b2387e6c4e65a924990bcf48820de0965c76c8538f87137801dd1a9addb6c3ec401e6f800ab86cedac39e115222161faeb8862d4bfc8d2da77cdd90dc98011c2f8030670a66b3ea425e5156945d7f7f77d072a6ecea2d85f0e4a16793021b4559c364f61a914a4dfa0f15e10797cbdb87370617f51c4d61cfc3f8715e2d475bb71fe0423d9bcc82a1637a48e217aa8dada7aff8f2c39d4920357f271bf5983be8e1587b900bdcc4";
        encryptedDeck1bytes[7] =
            hex"b5969ddd217cfaa39aed927bf2a2a16d1f39e57861e638cd167b629ea5a4a2b6f8896e8d0a4c22239112254cc1958db41a0f9cb89d9231c478a97295dda6108fb496771f776b8608b16de214398149f7178dc0bf34a348d0fc8d9b0adc542583e8dc7495e665211bb7a2a19075aa2c67710834155a7630baca826579845ae06830b699892e8ffb501da3eaa3df252e6370266c94ec01c7aac80f6760e664bc2e392f775e973ec3c0a350f5555c41dbde6301ab97e8c7630cea705930fd5605fb411411e44c142d1c3b2b8126bf50758eec82ff711c71a2709c716daae27865a4ea401a2474603a99d8fb6ad0abba044e68bbe9729a3fbac72fd397f5dcb9b918";
        encryptedDeck1bytes[8] =
            hex"ea0e442582eef3fd9420018b15f7286e9683e923cc22f033c2a726c8176b19a281b840a854e2fe0a1920a66cb66f9dfdab996b408ad216265f96fc85c096f0cde92a506011b774ee7826bc19c383683a72136aa23b2918176bc8349dc7dcc82ea21b4abcd950aa3e5e4be1e88f6b75c8754ca477ab4c5517195511cc6550d8be682d08ada2c433c90c814310e8e639d2db3f3c52966d7b3cc832a2d7c0f0b2d7d229dc90d5822ddce9900e8d594ac45c16d8dc324705675fb4c889dbbb4cfa6fb491974abbd6e18965e5150fc06448aeeed752d3f67f042654a665a8cbc0203e176905348051899b04708fb82067cfa34bcea0e2edac4da630a8d3f546359267";
        encryptedDeck1bytes[9] =
            hex"6a755c300ab1823c60791251034dc46f8120b05878204a33499edcabce7c65d46a70ce841381bbfffe850ef3a6d81708570a547ff15064453478136388dc9f1fc5ca8b29901748dd0dc94f168ad8b0058575a44052e77d31d19b95bf7a11bdd9c08aba35ec5f102df153663da9335e604d8dcdaf3988275427fe80415aef6b96301fa6004523517a87a85e2a6833f4e90dd39647076361d915c19b3d4950195627ffdc9e06298941b1c8704154ca37b9a39b74451cefdb3da95a5f0a09ba8cad6ce3568fb41dd49ede3a913defa74faeb34f76a6bc3564239f31c1b5c76f3292fa3707b29cde164b6ced278107bac091d95ae563d7d0585c6b9464e0c3f4a941";
        encryptedDeck1bytes[10] =
            hex"b789da1d913da5e78e09fcd37826602f8ecfe49ce02aad5de71f1626dc2a235a6245300e883e891504acf9cd3113a8ace4fd42dfd4ae3354a1dc0a84fab832778f1fd02f836f71e7531858801f38d63a7eac56e361671509e7a46b09acec975c8df51b8939cbdd74a206a95c8866fb227d47110606e6540989f8ef5819c74ab823e04c311524daca2cde38a354529630d7020bbb73fd6dc3aed0126023a73f68c1703e6555f65bcbb46c08a19f39c52c0320d75456547eeeda472394c6639c86e424049eb0a8a2d263aa34dda4ee03edd977eb71c036398bffed98ce1bbd140e7521e041df6d5fe850ef7849af3dd572b8450a996787b4fa4616491f9bcfedb0";
        encryptedDeck1bytes[11] =
            hex"a0e03eb8dbe426da4cc7ebb7ac260a336800b32860a1762ac66e545d76c85d635d5b6220dc0afed7fa2e64940b30424ab381c92f15ac4a374498354288dfa145d4e7bd7a366723a1762c9f87fa925a8c4719e447863118b12becff513632d25d1ee2375032b155a98260ae61d5b1767c5e111b0236ce6eff3647b672d151ce3c5abfc7cc9fec696d85c00496e7226825dfc8052b39cabb83fca581b3611e933a493b08d703248b6909229cc594cb0984f791d09be8bafb7263895a1890bf17ad8370ceb08874fec23172d8ddd658b12da298b60a3a075cf4bae2e4d6e9fb9b95b241b8e013dc8a9b105659e17fec5d0b0bf6bdfaf884e56e82ac5209ec86b728";
        encryptedDeck1bytes[12] =
            hex"efe7f8e6d230f5c96d754091a68264b5e545e69146f04de634924160bafb9b8cbeeb852cceba32de73f123ee04e9eee80c625db630261ad6db2ec45317cd568578c65b9035c3388a5d261f5d74aa0d04a76f2d0ec1747cc22d0ca49a39a61db891653f96d384df491d77f94cc7a1e1f99a093b49b09cbf0357b8af68259617ae41aa20a55682d2373a302d0f486e713b0fd219c62e606d877c74a3d578b83c876aec31a511a8f5fe1ce1487222328044f7365f678facbb05844ce9071675be129dc16f79e99442abdf613034713cf3cbb5b616d5e1ccc9787f1ae712778e2b7ab80e578cc178f9866c4cb8232af343103a6a045755843c3f7370e7728378302f";
        encryptedDeck1bytes[13] =
            hex"b0f6ab64f1e15df021425016d6f6a4d2259a5eac6a4b352f0d795ccd35dc66ba19e4858a8ba5b1ed9333083c72b515b89241f6e6fe3d84d6650dd42f968f97ccd09883a008a4a7319b977c48c6d430671b02e181e06934c2e384b272eed18100085f3cd837c3116da903f30537dccf226779374f3c497a18bbb548b17fd9fc759706289449840d921320050c64a5d8f67628d27c592bce4462b60eabb7a1a1f3508dbcec8374ffc056d9460c8a128a78a9ed3245199a7afdd3e3e31b059f00721095b028961a4b6f3664bb5a6bc7f6189941950b3fd4e640672cc8860161918b10e1e4f67c3f65442b922fab3fea6658f38f6a94115efc5ff623f3d7b760fcac";
        encryptedDeck1bytes[14] =
            hex"144932831da5b80dc91d709f7d9d8ee3da2fdc2d26a7297770b0af11e3463cad898575382ea2c08d11b0f8ec040b26e5cf96e4d2679a817e717ba4e7faaf2c0561c8393d907fe19a19ee672bd00bd6a639bf96cdc78a428bd8b02e54788959d272eea43a66d50d01eeded0f002ecb2ce4bbd290d0f137d085f1d4cc3b6a022c5a3ffe6cc04c992f13297455dd7873c7a6124bf0edcc760c2fa245efddc3bd1bc5dbeb9ba5f055555ae5d8314df374fca073dc24ff2f31e50abba32693155fb86a07b9c3c33a324686a015dfdf0d9df710b9c2d4746c04f18acda2f6ab417d9064d01ccb97a7202f966b3e12846a90007207180d4056a0dc400ce81a42219c3fb";
        encryptedDeck1bytes[15] =
            hex"b97d165e00fe512b8126672afdaa1ef1fe65e3c15e6f21eeb7c2c9af12afa3fdcc00f1900630f0067847ce4da091c3a5afeae9070bca34e4cb0ea27417ca545f69a9293f8f735dc5f4c2ceec04f0627de5caed078e2ae142d2bb3b087d850935330dc27c8d3299cd8c6ab1289b23c9dd8985edf6b3567758496f7936af33b5081709fed8fbb9ba443c1886a2c97ffdfe3dddaae1fbf913dc9590bd5f60e9c2a349b1056c14adf3d6c5871bede231ae79a3400310c3e19ad0ca1dedf88f7133128733f759153d18888c28e8948a8b924cc66cd77263fad0a76369c3f15501c2780003a65f4a7a8536c8e385c2b2c1a69707ce2bc034cfaf2d5c58fa495ae62248";
        encryptedDeck1bytes[16] =
            hex"3282cf9ad9df7af57ef5cf064dbb055ee5cd3410bbb632ef2e230c692ae8ceb798dbfa8a0fe5bfc6d01f6bbc6396b2c8c2299a1b01a0f52c89344ad2f8fcf72b7ea06c7928f6fcdbc319aa4182d7f6187a72fb1e4f36ae765cc8c499192e453fa0d008571d91c83151c1526ab486955f524e84b66d996fecaa81e7627e4414e82962f5b37163fbc03e1cf8495d60b64e270aba8a938de02adf84cdef4bff6bf3e4235adea0eea5f938afc25686ce6863cbd559e5e72501859c987a0a5208368417b56c71ea59480c4b666f40361adae80bf8ff48ae96ca94a1f1cba5a99f16877f605ec8e02a92fd25377f42c321417ea019b8df69d64173d17b1415f8b81a6b";
        encryptedDeck1bytes[17] =
            hex"4ca7514c5e9907efa888b45dabf9936a30a5de218d6cc9ffbe23da4bc217b4dfe62bca56751e6a5680f5230cd7e16d20f6fbffa8c3126900aace5eb617c450134b6ec49e42d3a83d23fc2e09257d0d7062826cf92797aa441e1867e50542e02e765ec848008e0ed66a5020e0422799a5687f5350b8c9e8022cdd0cd3c26eefbbc1c9bb4046278a5e3fe939c9cba3178499f4cd19972a6086c7c8f073314ccedb073aacfa1ab7ef8816d2c2e562300ae2fb534a632c4b5a6755bff7db81681d125a1907176c8ec441e5b85954bd28cf4ee7da58ab6856df052c077daf0fe8f0728fee44045c7d9c9782112101c25e6da4a2967a91f36695092e291ff709c2067a";
        encryptedDeck1bytes[18] =
            hex"0db603ca7e4970165c55c3e2dc6dd38670fa563cb0c7b148970af5b83cf8800d4124cab43209e965a037075b45ac93f17cdb98d99129d30034ad6e929686915aa340ecae15b516e4626d8af477a730d2d616216c468c6244d49075bdba6e4375ed58c58964cc40faf5dc1a98b26286ce35ef4f564476a31790d9a61d1cb2d4831725c32f3928c5b918d911c6e7da7f40004b85cfc1f5c143ae0a5b4970363446ecdc38418c83f94a50cac07fca101516ae0a1d40b6391a5fa556f1ef70915f71cced47c61914cd053cbbe47ab7b3d19bcb65d6e0c65efbcd14195f2299bc5682e8c1d16e1744085541569889d75590ed5bbbe0ceaf415529b0dc2c5c3daad2f7";
        encryptedDeck1bytes[19] =
            hex"54f0ccf6b59391f5b0916f5ec0bb32ff2fe78d139e04b6c0c2a0149aa715bba8fbc5e7ba2cef81a64b8e74b3816dd4abaa0594c3cf339d5f26799de6b12bbefadcfa2683e5017c52c2bd311a5ae0b23d99f111a2cec095722954db0b7b7fc76ecb793202b804d936e7634653595fb75f40ebfbdb0c8465e0b47077981b4574b531695168556bb09a906002417470e91f94e71dd0969cdae392d6d16e92c5d0a9ed8a44f4a02a03b3201d1efb4b97e6a02d31fd1aa6f66a6b06bf574ed211aba85afe1da5e7e23a1648af6cf5bc21dabe2aaf87a9df120be34a60b4d1423c2cc1c30757a518abe206bd7cc0e7744d32614c0aa28fd720c32e4895fd1dd843799e";
        encryptedDeck1bytes[20] =
            hex"5aca81b804d593c189e6ae6551466f467ea98a8118d21473348b2f334aa63d9338f92c3ea6c6b67aa65ef234cfe825960ace87397487a20fa21165b4086224b26c9631b4090d3feea7bc945e0c075707cf4cd40f550bfa1cea994b07ed491cf8bac326dcb2390e41a68f5db79196239065a892ad11d4cfccf2d41533db8ab3a50ae66960092a4f08be0eec3fd3f92087c979fb442e8fcd2e4718d26c4a8d5a59864c9a08dc50cbd4536e58e0147fa2890d8f804fef9dbe10d643b67a2d3a6f4b442df5d5159f9b38c22b881a6cfa85daf18e4babca5fd13574d5363aee0a37fe63aca9fd59d351f22558e9527ed8a5ce3aa606043ef8b1c78b5e109b15861766";
        encryptedDeck1bytes[21] =
            hex"68edb223ab121f936b44a86cf6934b22ccad36e0a4375ee6aaf2841ad334c6468bc68e26d86f029ecbc8c15cc7eede0b1ea10eca25fcdb1e99546cb1f8fff9518dbd9ec9cf46d7a02b7cfab2f291a09f3c173b25828049f5b71a2e2ad54f59c2ff27857163e40dace2ce9a8ee104ad7b62d1d2096adfb797b8cb1d93f4a6778e5403177fcc2d13b33c349eb5dc4f298af8ff296ec5f539d5c668b46563cde5d8055e87179de9a8209009eedac6cf3a2f1fcbb63cb2f021ba56c77518d90cc1842e42e492beb0722f9e9eb6e01ccc3c66fb423eac2c68c365bda2eec6cc2b7f8a376b0ff65729074cc8a0b1a33b52ddf7d2b591768a8ace85e893013f214a2852";
        encryptedDeck1bytes[22] =
            hex"1dcc70769446a72c30d02842073e6e252e9401c0ba71704cde15fe27fc0c8963fdadee1de1a49c7b393bab03ad31675f5b9bc69179bb0d9f55230d7fa43687e19ef1b2d3e7f29a7487d867b543e906ada9ff1ea6a0c47e568c2828df730cf218d6d5cb1169ddfcbf1c7f5f3c148ddf743f576ba349f1ae311647385bcb3b02bc536c23f6e2c069dda639123c655df01096ac5320e156d404141ae841c6b942fff42eec570cd46da19e8169c6bf57960a60657ee9e71899eb15b17af1e57148365a12293e26ba19b241adc6f74d231686c20eb5e1cc2c8518c06342d1b1224c784761fd847fa6e2fe5c926e5397539a3b43548d67c81b6c1b2453ce2a0885187b";
        encryptedDeck1bytes[23] =
            hex"207926ae5421989bb75f004f9d66abfdb89d896833c7ff5a16745071354f44bd7297159ee258a5bfc37ff3938c93c462187bc63be1f3b8fd3f8c13f6ce3adebca8664d434ab58d6cfc045714d0de93fa3f6b67bfc83ac62bba1a41788ff724c4123a5bdbc519501440ba05fb3f9e6dfe3ca78b78bbae4184659dcb453a4f7c5ef9f2e243e1377821a182a9d46aafddb029ce4e12ec31275192b395f7b839da00548fdfc261e69996d9de05c34e8efe22795acc8048b866183c6726a4141ab733e780983f781f85a91df5d90cbb0e079e285b34470504aa2d922bbcd358f4722895de6c950cba930592079bffff9f670c68f7eb1f83b4304f47c0c11e6ec7a04f";
        encryptedDeck1bytes[24] =
            hex"340a79a7397edd9e742a38ea5a757eab9a40ad888f9f1e3bcccf64fa26306e4577863ae74af8792802dbb953427febc5fa92dfd0ccf47e532457f18488d99cf9b6ad58d8e9c76e18a565fea51b1f057ec3d164391f9de1b2774a2c2dbdf0a95662333d1ba60ccab260461e197cb546443d0a805c3c41dfa919b54a0fe48d08f0057f8433ea5a39878990b7bde94581ac3bdf2762d4fc082e2eddb4c731819f7206c4b065092e871a5a6e43bd14c965ee4fa517ee5124bb08ef2b63fb82b601ad5655de6edfc6aa7b8b02499e08f5ee2fc40637433e636b5283809e94a4e2c990422c568525dfa1fbc983f5208f892418a6bf0cccb71bcb4a547c77b79b629b5a";
        encryptedDeck1bytes[25] =
            hex"ec018065f2af9f41873c6be29b7ae7310619e8484a6764c4934ada504df09a45eb740229d2d564fb8cbb7aed25edb8f676871167c1ee17b688c99474dda912b5c3b3a9701dbb60cd19d13285a93af47dd93200c667ece45056df049c98753a074733f1b02cb7669748afe9b4a2284483818b816857bc7865d8cb9baafabd430e5b56bb55895913431bbb91105e13a1a0421adb791e692155aef34dd6fe3336125a6aa3979439c5e7faab21d99c42ada9b6f807eeb4928341a49f543f845a90fb57a18a05206b573f8e63c8c6a601d70ddbcc3ed49a439b41b82290cc0504cea7a24acb51eb5eaee97c649d3123eba0c79b57c209baf447d946eb851f054bc6ff";
        encryptedDeck1bytes[26] =
            hex"56e4093725543d39a3add9b6463ef1c19f7d8c381c492b519343c822dd9b3c4c6581a93baae1e897bf294933f0ebefa474f33aeb064f9eef4fac35d5ce3de0e2b7837f93f10568316467a78640983e81010fa7c6fb8461ab146bab0a4c1839477091d8f60b6b958fd1c74e1f6c1c861a4d2ad8cbb8f4892f73e70176b0b1df05249304103c0090149f9a5040e99e50ecfbc2bcf71e9880fc79977c6dd00853e475cb0bfb5ee19bbe313832478e8fcfedcd5128d71483864cf69621b29b1f4233fe0e10604c76afcc712e20aca1bf691d17a473aa82d6a2feaddcdff47b80db2b4de91dc283b907553570ce6077d103859b93c3b6a468bd615ed8ae479759ae36";
        encryptedDeck1bytes[27] =
            hex"fe0b2952786d819b4ed33a994bcf4092334992f0d2559859aaf99648438a244011b8e71500627f02995af315fcf0a75d2034e546e19b53e5d271cb51086b2b2499edc8a5fbfcd03be0e685b25b34569c14399424eee8cc9af98d87bd21ac5a82d5c99e2b852fdeb459b7362417106be497327aa609a7a6ce1dafb7c83eb1db978ac6cec5198596e1b855df8550c47a3e3f5747f0c5c5da2efbc485ce91f8c805e9fe1eb3d341d24a597cde6cd48217eb0972955452ff1eaf04d0a7a5c248104b87d65e3792a519a2bbd45efa210eaa57bf6a09d643d5bba8c7e89f9e55af73068bccbd85beceaee10f948073e76d7b39d2798fc9a11658fdd0a5d8168f3c411b";
        encryptedDeck1bytes[28] =
            hex"5cbdbdf874963f057d0318bcd6ca2e08ee3f89a597168904052ee2bb812bbe36a2b4edc024b91d6c19f9c6b53f66408ed5bc2d60aba3a39fcb43fda32574469a471f8ac415112bcd49670ac9f1bee34b366b6a3381cfc655d5b01b06bde18ed15fdbcdd0059fca9a90f36583a452f24b71e76f9dbe44f31bb24a9f1270f71df4fe101c07efbf2e82cd493a3f4926885530559a6ab68b73472dd97d6b87cfdd940e8d610f9b0863df64896c2c57778bd6adaeac0c5d2ad9f2c61a80ddf64805d6e73de88f7a3410eeeaaa3bd152981439de8337ac6e246850d851615e274ee667ee8e701ac4e077409d4cf6cb825c76f28a2f272b0c40abfaa1a0c1c4d49c4bfe";
        encryptedDeck1bytes[29] =
            hex"c5ad0a89377a31b96f67f6db1d733c0bdcd390fc6b8ff7d15d866b0e64b8ac0db51291f6b9e6d5392a16c8f5291a6121f8cfca7086236c63991f1182eb560716b0473d4549a90998d6d8bed505c31fd1eb76bdf98edb64e2b4254e2c94f2d426d2597a1deb76dcdfde45e633d7d5850d7a7050625ff13bd44feff7b832e30ea16cfcfa50d8279f74ab03eb195ca89f34068739e60b62da6b2e1ff4593ce7cae740822b74178f3817f1079e9c51895cd2155d0d4119a6e2985acae2337235eebfce38f35c59b979c9401d63a354bfba79e32bde72223f2bbc48bb5159f9de5b9a48e0463adcc31542f437409a6bb80d9c5054960bb319d1b8a34b39c3a793fe9c";
        encryptedDeck1bytes[30] =
            hex"9d65586c0c8418ed6477177c19e7d22443f73a8c0e74164d571e484444fb3d3214f560422305de8553d7427cbcc8ee54b02add52133cbf808041f6a1dbf0d98fc251780a6992c685f235d4b87c93bee2969ce5088906193c2654c7bdc0d7fc6db8665b9856cf96cf8977dae6fac5f6dc6716426bbbb5dbf4079dc9e6d59c6fe48b7986a440614c2c2b11f722e61034fa6417f92c7060ed67c68befdc3e59dc819e58ec49dc2d123cd6490812c3d822acd3a2e6d7112e260d211fa5c39703b5f8a1c069f92e73269cc9584ac91de00f86fd96920f0676251b75d7e6c4b5733a236493fb06631a564df415d68ab000a94cb5c848e6ddf76164e9683d3e8ac601a1";
        encryptedDeck1bytes[31] =
            hex"8f42280066478d1b83191d74749af647f5f38e2c830ecbd9e0b6f35cbc6cb47ec227fe59f15d92612e6d7354c4c235df9c5855c161c7867188feefa3eb5304f0a12a0af4a3592ed46e756e639609754b29d27df25b91c96359d3e49ad8d1bfa37401fd03a52497644d389e0fab576cf169ed030f62aaf42941a6c186bc80abfb425cd8847d5e8781acec44acddba2bf73492cb01d8fb80c0473c0de3251951031f46ff3b1a9435f099ad721811888b06c166b0ea4ddbc263a09be724eb3163bfb7ab7b3b85624fa5ece51c036e0e58faf3e29f0ea46d32eb2d0a2e38d751f29790d5950d65c4a0f350ce0e39f38671231db8bd74926544a68c334c9a7f01f0b5";
        encryptedDeck1bytes[32] =
            hex"4ab4150beed85cabb56c4a062675d4a7c10fdefd0f28556eed8026c38b92343c7c7008d4f72c03650d5a4e8c686352282c0e59818bf66770819bc6c6fab22e2b70e56b8e36cfbc5e8251b79d3fc5812cfb63d6d4fad3de0b330197e634aa6e55d1462154ad27527d7fec19142f6acaea5c4076600c59c4b36d6682f52d02856bcea008985f92aae430aeebca5675afb733192df30f2eba6de1084573f40a4ba07ef9e5f35c00577d05b7af991f3821955b341ea6bebe3e8565e92d77b85a8686b709145d07fa4e8bbd39a59dd78b40effae56caac49247e9c88b528bd6a44209050c7de6f17077490a1d1388beda9c80530d596b261e9ad617e66ecd4aabd1e2";
        encryptedDeck1bytes[33] =
            hex"9328a08145c8e3a36951f2237fa273ccd51f8c757f97b4fb81fe5a6d2977b5c5959f815ced42604415a31c55a3be6bd13233a20fcfff8991db641f82257748c0563cbd14bb610691b1ca5b3b61788dd1f80faa3ab51961d5300184987a02a354be334aea4bf210162200ada7d0d10a67826abcf0bb8b3ac6c093d543e759809b28b03dd44a884675cb60e0abc814fb92024a094ee8f2ccf214bd63e19f9e57782fc88d4898036606bbe398b097785da201a5086328f5fa2780497bec7d4c90d6fdcb60b04e8b3b123de28371394975b8cdcc770febf66121f402847f49db4f6aa69921483bdeeb9040b6292bfa8e136bbccaffc22cf5390cb8b8aeedfd2e59e5";
        encryptedDeck1bytes[34] =
            hex"91356440d608385f763587cbfa1eb50a65898d510153406ab15aa6e4f2f235222be3bfdb6f4ff952a20847d5344050d86745fbe898e38801b2318793086526d87bb36404af5d1ab3101fe4cf7bc1018e90f114168855959c44eab499a96a317c191aa3f6f88b53bd379ca5dbbe143bac762be0000f1b1778011d4b6551ed164b35868b2c63f366fbbc2692ac52e793c49b6e6a2860f726d92dfcb8e2625bd43da787c641d94bcdfbaac88564548074546185dca6bb68de459072b188b43efa4b5abb6df5e9f6c55c1563cfba53abe759e0d78b0f4831ca069086595c1096a1011bb75b2ad0d1c641c8c21bb2f70a42476d41de9b5fad3ed9a275fdc43e18254d";
        encryptedDeck1bytes[35] =
            hex"308f935a6a1ecfb18bd964aec837469c763734ec3d71be5e5d7f58e0f4634e142f20390891f358d55c84973bf41897cff73bf3f3ca84f39c6001b2e3dbead543a41713691cf310fd216f33d59d2069d5135464fa2272e23d71b1f49a4895d366fbb76163ca2b0bd8675d4a9ea1c9c6a4460fa7c5c1294c9deb0b5d83e8d7aa983639430b8acf1c462ee2aa49e8334e80c02f1b640b923a11f8c422f00ebce8b95be293d7e2370dee2794af0a43d67f162bb62e297997e5a3acc1afa688fa9ff874a579b785c4d25622e7bb89507d4c891f0413480ad233793e75a082705a681df47e98ab751d6daead4371c9bf9d705a509097b89c8e4740bb3862ec39a1e5d3";
        encryptedDeck1bytes[36] =
            hex"811ef794c00b0149a1bb236ccf4e1a6ba7efe1ccf7a981666a4f9e7533de2bcb6f5a9c71bfb5463d0903a42cccbb7d6a8885ce30b0524d6291bbe8a5fab5305180029ddedd1f9722eab5080eaf7f2bb3bd0816dc2e1d798a8d530177f0cb82d92f9d9e6ef37997f910f961385be8e3066cc3c3b309a00c5e7bafb926a364e811f9402a64ba5bc2d72ec69236d56422f4050d9cd741961418c7ec2bea0bd8c584a035122c58fb59a45d11dc1d5f38f360af2a7afd8a895eba201828863f5f1186cd968c7ddc5178af1071ed3dbe3ca26eea2eac0e426440bae43c75acf930ab0bbd172f14686eeb98ad8645e9370c38f985a9320246d327e82efe5bf6733ddfc9";
        encryptedDeck1bytes[37] =
            hex"7f2bbb54504a5605ae9eb91549ca5ba93859e2a879650cd599abeaecfd58ab28059edaf041c2df4b9568cfac5d3d6271bd98280979364bd2688950b6dda30e69a57944ced11bab44490a91a2c9c79f7055e980b80159ad51a23c3179203311008a84f77ba012dba02695596c492c144b6084e6c25d2fe90fbc392f480df87dc2061677bcd3c6e35d1f8c44376036bb269e31fdb0b99a6dffe12b80eace96424a17f44b259a43c1994bf6c8d11c410a130f0b4f411cfc42d830415e2276517afb2a8699c377bd02f8e7f33986d89f140ffd39c00d9e9fa99f80c04a89bfebfca2323568f6fd61c64a35923870338867d5362010db798b2db518bbaaccb427ab31";
        encryptedDeck1bytes[38] =
            hex"d74b2141ad16cb783916c51e54fe4ff74ee0b5f84922a222433dcc0f1f1454f25045f5bda49441aff5d7ba346f886d8d0ff93dde3a08302954b8572188e2a36be404efcadcb6fe65de8feff96a4c051308be244eb97ab430863e68e2f253e6e07d39b46a79039b25136df686022f8e986e9468553414b6aa4490eca447b430e2855fe998fab5816083d7ab036610db62b1bc740f6c32152ee389682978ed0d1e6a763510001f8d90607cc949d4cbdb504b882cf2b4861ba71db8552717c3a2ad99fe46d15ccc28e584ab207dbd0a12ac91e1f56db7d955c5d69407f80c8804986a4c6a0d8adafeeab3bf8c41f81df9843e9296921939728099c43f331518c50f";
        encryptedDeck1bytes[39] =
            hex"4420e6534f7c14b448a49d498546194a57da590c9948dd4013da6d69e544779c340f5e50fa932c3d9be05cfbaa04bf33d9530d88b585b8f244cd907196899380b25e1efebc04f1a8cad0db65e760db5997ba617379d5fdc42ee1df4f768f57f94bb042a3ab1e867686e962bcdee09eea46729ca941bceac29f22dc4e9315372941c5e4fb93f1ddac16f0b83366c8f27cd23ff4b3f45d1aee94ee41bf8804ae2b0e17647a897efb71a824ed040a10e6e20200799782043a945f85ecfdf795ea71e37abfe6ed6bf7288ff42c1a9e65331abaaf16444430f49e2fca8243bc48bf85a0cc829b8e427ca4e4bfcaea4f872d668e57b965cff5e23bc7f41985663ce0de";
        encryptedDeck1bytes[40] =
            hex"226c62eec3e243dfaa7b6aa722ea6ac02833888cb20c73eae71803f96bd4c560dc52d720604b0cb1371ac813fc11df5ae3696c63190fba8d68beabe5eb4d00a482efa65356b9794b9daecd80b696203da689fde3f4fe9264a5311177608f969cb75302cf18800c6d2b1e0dc7525b3cb948e66869681e64d325145523cfbbe6aeed1c94ebc7cc579bb0bcf7d3dfdd457d90a9ed39742ccd6a797440f6f57c5d3adcd0a6c9209e31a1eaf9190f9186e7701979f83cb64581fa2c3df107dd284dbf8a908af9dcb3fb5f46748cc3a0ab95fd15502047a8c94148f5a7e7f69239209220c032b277c7b85409fba97903233830b8810c4650fc2a825e0372482dddd4e7";
        encryptedDeck1bytes[41] =
            hex"8d4eebbff686e1d78ffcb31cef173785865d8f0804ca574910133fd485e733db586c3cd8736b2b6fbad29ed455441ae6d16aaf9a2aab84e15fcc57b4ce40e308c6a0b1e4975542f5cccaf7f7b051e907c2b3e7ce2ecdfd2a6ebd149c08394dcacee9561051bddb0b62d49643989a9e365dae261eb63ad0da823037a8271441ab4f3325dc96c9a8079db1f6ad688cc429cdb72bdb50ffdaa7607b62e3e7d6cdc8970638345bdc9de588925ecbce90a1b92147852de04ea681b0c51cc12223cd34149b888120cdd9efc466684c8870ca9c06edb30e00a89bcfc98e03159e0d442e05f3ceeffab77ba4d8da00c0f0029ffece2f9c4dc51d4a7375f09b70bfebbc1d";
        encryptedDeck1bytes[42] =
            hex"58d745779514e87d96ca440dcbc2b0840f138b5c9a8d9fe263e77bab1420bcefcf3d6abd28d44f8932c41db4606a0a9d3fe0e1123d6ba07f78decdc4eb5002ca920cd8a3fd09541006121df2264fcac4682e3deb28482de3ff827b091cb0ab2015aa7fe95ed251e8bc2b55eb7ed954d55969b5bc6564ac7e335d8b55461e495517bcb6b822956f8eaed49e405ecbb8ba629e5c1da69427156058276d0d4ad71efe0bd3021d9933c942534593d187b93b6d7054938210a22ee66cec16642cd8bfa11e031ab10b258299acd463875cf77c04995fab269b3a1a11590b17b4c58994d8cae3dfeec62ca3ad64dbd97b54d4a9eb1ce4dd71b0b794751b5f71566fe2ce";
        encryptedDeck1bytes[43] =
            hex"e7618dedc314028e0d91297d7fceea960c7a617c52cc61268a48d47ede285e490ccf1927542ef4c58edc5ddcd70d40faeeb96b9622996ac8752df60e969299f2dfb5b5f0aef481f603faccba368ddaeddca7218913b2d0423dd61c04aaf2958366b6b9f27e1556e93a113b29645ae73e77fc84a2398fc1c3c9fe7ee2f63c5f1bc1a64a60a44d25851137ab78e3944c33481d41608b9327ef4999f521cf701bd771c8e925807001e7ae337290ca135c43fde38e9be5659b328e12de298ca38b72272328496a717592899d02fa52795797888ad46ebda6df1182ddeba723edfa8dc8ec9623f33dd993cefb620bb81c02d2262b432b321389720d3be100dff30a93";
        encryptedDeck1bytes[44] =
            hex"fc17ed1208acd6575bb6d041c64b81cfc3b393cc541123c8da55e2c00d04a39ca7fd25938270181125c01e958d728c6455473f1faa7f5255a93f3361eb59093cbf646f95eff8e45d3f3c0f46757cca58ad1afe00c22500620e76b7be5113e8aa30b0f73831c9225b6f532e5804539d298af39db55d37837f5e392de9a9457147979d1c1d32f0b767a91b9185db971270d87ba8ca3dca34161503dacf54b644cb61bd57ad148a3a3f4861cb20918a2e9d69536997e57202cd14f9dd41f93a79bfe4c66b7d2e10a3ec9355ab433b711bf8d2751dd5a011248d646c747b1c6ac49d00eaf76853c1899297a072fae3e9aa1582f06ea2d3ce5ecaba6326ecd0260c83";
        encryptedDeck1bytes[45] =
            hex"163c6ec38d666351bc39daf703214da649c5db51a4eb9e084154629a19cbbd50f34136b9ac95277e854bcd6c738941de9a848af99eb6830e9aae3cd717c14ded3c51924d9c83cd78bb98dd97b5c362e9a0de2cf1f44e0ec4c3c6fe534921cbab18074b2dba3bc95ad942d8bc15a9818957fc05fdbb83a0571e93d6a24c0c8d1597299973eb5e726b41d1935d4cb4a447c8005e3564c306dbe0e509fd197e54f6e5ff80c11dbced60bf789661222f3917a75cee0c60803a329b90fcccfa639212438b8ef698379a1e928011b4d6776dcff8911947ea84e63410565a8ded5c876fd7e392d6e57f2847dea7eea14a2cd12b6ffaa1fad2b207f7171132cde12ff893";
        encryptedDeck1bytes[46] =
            hex"245f9f2f33a2ef239d97d4fea86e298297c987b13050e87bb7bbb781a25a4604460e98a1de3d73a2aab59c946b8ffa53ae57128a502bbc1d91f143d5085f228c5d78ff6362bd652a3f5943ec9c4dac810da8940821c25e9d9047e176312808755c6ba9c26be6c8c61582159365180b745525455a148e8821e48adf02652850fee0464793ae613715bff745d3550aad4af7858c5ffc2873836034ebf632bee07565116dcfdf55c9acfc142c5bd47ed0bdb99923f923d29ddc1c14bb6ba635e44b2da07db4414871156ef3407a8649245c02450c484c8dd86459241319cb7dcefbaba1f8cfe2d4dda281efb6f206a70955080a2d6d1e4424b574462371ecf4097f";
        encryptedDeck1bytes[47] =
            hex"66fa75e33b51744f78283e15710f8c605d1737bc25f2ea55da4ed0929caf45a3220acca55a7c9bad582decdc5870c31253b368a2eee0d98e7021d4c2dbedd769b33445b9c342ebc189d284470cda145bd4f8a50155bc7dbccc035e2c04b6e7ea5a0ede7e107d5153f86a92c2ce47dec05692f518be6f9448f95493b55f3a0d3e60d964d7e59834392cfa50b66721c1bd92238a483df993bcdfa80966268b629d7d1dc010df3210157eeedb8e83d750e17fac8a80456305d866f0aab50fff2af88b32f1d85a1bfc7976200329372eae080e4d52ab88a42c4a5a26c3a392e6d120ac8949d8ec1be1fe50aca42a37cf0cd3832c704fbd42d452d25050156233f3ba";
        encryptedDeck1bytes[48] =
            hex"8b5baf7f86c636939ce048c5699378c316c78fe38685e2b83f6f8c4c4f61b337eeb07b56f578c47e4737ca53e5c5ffee067d0972f38f83513699bfc5b12ec120ec1758d48b5157172b20818bca9a5cc45b9551aa020a30f183a6449d37a0dbf229d0af1cfe571eb278708e7785ddcf7b516f492e09caad8bc2b9adc991a7d75b5c097334b034c88d8e77a8adf35f5c5c66db8cb4c904348e79bab7e4aa944a8e0ec5712d9d2505da77774b7f8b98b86b8128597172c18a9fc0ee525d591636a8718b95c6bc3964399be7b495a2d33c3d19f8c70d5ce404b46611d7f264c895c47b1208d28faa565660e5f347ec7eceda7ea67b26f7d550405fadea4700d58785";
        encryptedDeck1bytes[49] =
            hex"c3b9ce48c7b986757c4b8c8397ef7d496d3d91d7ed4b83408ce2b7862e332b6a4b56d0753bf46e47b67bf474b99c46292de224494f076ad36fec7993ce43e52ed5bde4353da51dba352e4869200b938e845827d5621798a9c90e7e2dc45a624e2d40d32a98102086f3e1de67c518b6526e317371b381188590796dd99d76a45179d347a8f192bffa9bc99d19e77b37669fab9abf83673452475f4959ffa547acb841646d58d7a00cdfec8b500e917384753de184ac19c6b66af417cfa92858342b2900a1f5250413179eafec6f222c1af636f2717e7a94a0e53f2636c099ad30bdfe801d71b5eff47c43332168343c7800cb74e4e5d1d7858d088899e87dca04";
        encryptedDeck1bytes[50] =
            hex"c7a046c9a73adcfd62846132a2f6face4c699020e9d46c622e2a1e969b3e2cb11ece537837d93c2a9db19d7598987c1ac3bd7097bd3f6df3c251a972086828fe8ad0965555acf57778833540eb7aac155295541dbb9f311b9f3c1e2b658b45ff777221113edd9938c8a9edffea9253c886af2d530c615f230f668196c84f78f16026acf8bebc7eeeba3e3918d1d607016d62d90c935e808414e09f587a2a4e21c8c2f27ad646d0230222b1e89481461fb57c38fd8733fe7a4aa1ac973b43854b7148e616be4def7f689c175a3a5d48d8d020ca72c603c2d7ac377c7d33230a03d3c20c5847d03a916c2b4e136f3bdec09fddb7328061cbebb98deaed66aa3334";
        encryptedDeck1bytes[51] =
            hex"2652db6fa3639a6790b43f562df1e845075f86d5ae955d0c885f6b09d8dfc6a7afca5a235c2fda941e507114db0e154c7944b8b18747bdadbb23dbc425714474380258736ec15108e103ba58820538c474c72a2c4e862ad67b5eb17501c07a4e018450b5bf4d851effe61d5f77d4da2f6164224ac0feab70a40168e0fa94bb4ed36ffa3b94f6168fcf3193d2ca3815185e612b868424199c46f596f5700163afed5234d69e0d61b80d2f3fa81776ba0b59b84fb5915fb9be0beb85cf6f437ad6d0b0706ea5dce6cb9771f4316be6b2baef39f848f0526f7fbca03e3d04c27d653683beed4de202f0f9e3c46b0a2ada7957934e93eb8c1ee88a88d49bac0a3e17";
        encryptedDeck2bytes[0] =
            hex"5c2c929c6c6a4df5b8177f3164b7e00b0ca71fad015780074e084a6b99f5c8a9602e4b22fb0778a79af319027d858afed016a8e59f63a91d74d03d9bb9afc1bbbeacea35cbe2e58f7d28319b6a22358a8f8693a6c72125f4c66207c43f29ee2937afe48df900f75a2f92d44ee9190a3d34ad54a35b5a3b7c689131e34338e35eda7d78bfc0e04cef85e4713ee9cfa751fd826dcc81e9347da6eb5c5af59871df281336b15f621b270d126583a299dafccbd93cc1cea495ff62da9c4bc83e86954b8e28aa2024de5b70031a8710228f3a027b049727cb5c9e0b2674484f2f05a7f6cd98bf27d26b04c57f892db99394d8498bcf00ce6784616467b149c047bc9d";
        encryptedDeck2bytes[1] =
            hex"7b754435dc20b55ee9d212b3d7786fe7d0dc12179aae018b3b7e5a54375c881922f1de1782fa7f72be99e393918c6e355d59bb3828843c46a45bce70d2b8ce5ed27e2bc53e75d98eed7745863b21bd324fa1ac90148237d6bba1367399e743367fd53b54760f66ba36df13667fa2f29b86cad9a5fd693f790597c2ac848c62f9b2a30cfe004011c8e36e88168e7deddced43225fb4cbf6b364df67e311bcd6f563181c1292aa6344816d16891e12b7240d3a88a4cc6a57e00139473fb0f6f85d59ee134a3faaa5d320407524f656dcb4492990dc04fc78f92852ecb54f0eddcb7291c10831e3a93a657c08f68f1ae8235c03dbb1c4dff929adc8aceecf5a18ec";
        encryptedDeck2bytes[2] =
            hex"b8cd7f5f96f693cf064610bac58b3e979815620d901e362c5766bad5aa9dbd67a4a06c1494e7c627cfd9fc3a77b072578181abd0ed08b5175815e0a3b420868cd55177a29cbaff84d9e7a987d765d0056298b7840dfa09ad164e3d9065d69ba9d829fdd8ecea894f14bc041e855555ad1736da36a1e35fae1e12b955101f10f3d6f0565f9381ddc258b3187d7e7e9ff915b7f1eb349202ce3d5e0928dca715321e5ad0d2eda35f60540eb10675ae9dd07fbc23200c5a6d75b3d3cfbd00ccaafac25f4b98525734b44a191b3a3faba48cac85ab1460436812b2d5011b2849e1d71df9676b8f35aea86047be3b016d163cc361720e9acdd1da509b9f51ea171dd4";
        encryptedDeck2bytes[3] =
            hex"aca2f431b28d3aa6ae86fabfcd9440d568229ae33d2564f69ed679eb0f496af33b2282114da8589773172f2805a0577678cd803d9171972c6fe5e1d764fc8856b67c06f4933ef7aeccdd8c8c5ef4ab3432e47c4e558658e0949a44f7bc4ba1b8a69922dda90f4207639240f8b1bf06cd542dbb8e0ee3ef3e4d3e819cb6635adb9cb34eeffa3cb09a0b38a02bc4aeb7b47c0dc0b430e72bcfc67a09d4a4f53da3c192e82244f53022070692dbbf17f3f35a61024c593a4cd6c983644bc177aa8dcda635d6e6b3f62299e9ccd86b4e02bc5e5761ff641a36abf68e376606c8f6e133e1ac20b29b07a83dd7376629675e3159c7c1a21687a1f97e5eb55ea7f8584b";
        encryptedDeck2bytes[4] =
            hex"25b78c32cfee653e39cc66d3cf30bed2f989bf9eb0a5b323437c55e1716080c220fb16916ff65ec6e6d20c974c2d2bd26608a14d74dc96bd05d91b24670afc99ab98b23597ba581f4fe61d18186e941bd9c8894d5201780e87b0facb500beaaf731b1e532c20f2c9ec6b82e39e696e15bd2309b923e67e786466e020fc645d8ea65affe2fda436acfe773e70c6fdb51484727acac9403f667a45ef82e270e2119a8eb1ba13f05515ad0d17952561e941b7536588f52e7d52c252e35a21064df87c9f0c957e30ce77da52998c7bf86025a93cc770c02f44d6f8fcb491bb1a9caf9b551a5efc1708999c7c38d49e88be49c0578091e45010115dce55f7238cdd05";
        encryptedDeck2bytes[5] =
            hex"43c715c31b0ddc452485d1584a82fda5fc8e1d2a0cbf664071eea67a473af6a0dfe61199f9f09eb0d46b5aad1e4a4cbdfced7f93b0407c648a079c822f69a8249a9abc83836c8a15cc076d2ee3b31f472ca47b57fe183802ed1ed338c13dee15834a8a1125eda5fec2fc34840d91e8c8fb71854726519ab0dfdb460046a38bedf282b50651863dcd1631b800125020a5bd2695c31623894b94d085409136bb381acc81193ba109140b54010d0184f3c6e873b4213758d107d68ec0e388238ecdd6b05a43715795e153ede503df18da83c5ea55643e4517956652508a9475c897caf898794f57cfd1f74b6e503b539918153d0a3dc3c573f9b7404cb52f37859e";
        encryptedDeck2bytes[6] =
            hex"e507661954622ecadf54d706c3c96ffad1e54ded747d7785f8eee73f70700d0a1f798a4058db35bd04a308ccb4ef3109ac2de3f2d2b3d998b9d70363eec7fe1a1562008bac1d4b1f1cf05476a55fd648aff89916ea5742ec6762f4f34d57fc29275ff260ea39505bcc0b3659e94c1bb281fb5ff65a806b12280b421d2469ee9cb1e25c925c60df61c448baa2ab2e2679bae166addbff17587acf7fc2f76a752074927efd90dcf4ef69c9f17a032ce693bc2e5ae0597e78ba22a8defd680386b3ef4c29196175a6bf9a60fe53a4396575e4ca7808e527b611811ccea99e26b348c633e1c965ef4752aa9d5c390cd80103a3c7fbb94dd916f5619f70414e7b09ba";
        encryptedDeck2bytes[7] =
            hex"f350b42dd4eaef93f726306c030f5f1065d9047f51cd9e224a22c5035c4f20cb06fd9951e26359e34d914d012463852443cbc1ef8b6cd170bf1d02b4767bf5c0f2acd53229623a3c60d7c7b4513f28647d92d59a15eaf2822ae5f2bc3822f2740299b7bcd068faf73d9bebebc1370c1f251984ae5fac422cbd2e72ff74dcd376c927270c347fadbcf9f3c8bc3495dfa2c2009fff43c93f8f91a4cb1d025f422f2021f8afc6a48a86786c09032fc372d54b605a9f76db3baca2765729bd2139113836c442c2d7041dc52eb6556ff509911fd355ec71429051591659637233ee76c779cee4af249e1394c5e6306479d4cf1a73a5f7065200ca9d4948a04786e9ef";
        encryptedDeck2bytes[8] =
            hex"40f20f679e2c5999f8f1f30299f44f6f03186fa5d8fe999548c2502685ab24b5c094b0da357eebb740e292cce4d95b689b0fa5198a201fed3d54ac60105d5f2ab522ce35b1ce9ed766872759c14864d334a78e7a0c914f01a7098147c79aec6c556581709290f5120dff2b9943c13c2978e82f2e3fa05cfa667c09021fcea076c06c3c515f4241ce422dd7d7d866ae3340fa744ba594b9f21098a5eeec04a9f86150f435b9a9381e5d0fbe8c63fde21f4196512561e989a91296bfd2f4a26a46e4169a9fcf2ad669a52ada09c60d77afd5dbe603f3fd50ba8211946d0524d12bc911598f11f4b9cf30fde1012c0e299104f1a7c9595bca39611b03a071ea4cd1";
        encryptedDeck2bytes[9] =
            hex"0d520f597e91f38da63ab8fab4fbdc6de970bd1bbc0d995c6762b1f01ea5aeb9a0b2dd086edf84d0204a4e41ecf1ed9192df77fb85b96a041b107a0adcc4e302878684834f43fca59ec558ab91ff7dd876e670fe88f88a1cae6dc63fd21fea9bbeb5c3d6590da16e7fd4e318c2e24ca183e73a5ceeddddacdbb0f43dffcf061dbe603c298e4a278a8ec48531ef7e2e684416a2c15d7a9434682b18687e0f2b6a8d47fc21f02f4302ab4eb31e844d020bd3eddce85de2b85b360707f1e0eb563107c13e2ecf6385fdbe3d64094aeeab6f6cac183dd6a8ffce542890d400615f9f6f801a19239c6d66ce481df72048c2898c08bbced9adffa9b0a6f162927ca606";
        encryptedDeck2bytes[10] =
            hex"d40802946534882ac56b9ce9904ecf33a1a41214b8771c9e5cacb51abee8615b443a065d5a70531829ea8270105ca1edb688af9d024c3e478f9171df5d72e91ddedb93a2b6cf463cf088b3c9803fa0bcbd77bcb0c889e0a035a6c40cdd659d66ba7460f6535a8b97364facd42aad23c0d2fbffabbd9d3e302027e236338953dbf10192cdf51fe8e39c69b1e48fe79917d23feb6c10e67d59d3b0bf94e63add18e51d134e935c4269041157fdb44a96ae09ff0ebc791579cc0417ac35d468c74929d6d9a2a3513ca614f15bb789c0bc16d924c9a7941173f63be9e0f6725416534bb5a69ba5135fddf4c966678ef2818407fb99460fd98c0253e84cfb38748da0";
        encryptedDeck2bytes[11] =
            hex"cff9d42fc3bc151d52d69595e851cff2e6fdcfb14779818c747c9f7735cc45df21100db19805d93d60543e149501ee4d5e4ca1168e6f344e97817245edbc3f0bd4946e135e5098f596daaa205819e9cc583ba8f435b8a5b15fc01bd9fa374a1654996d4d3cbc1e7f50971672397b09763ca3a01e374818b585367a4e15a0172932ed3afe175e2f2b82963473fca24bab9f073059ba5835afac0f6a78d3aa3fe970da706905ccdd543fb94def776db36452e0ae75e80ac441b5fcddbabf4c71cf82ee7d0cd4c57d202f8c4196eda18626bf155bf5eaae637ea7d24864bc7e72abfdadbd82b0dfd2dde94e8ecb46f099803a1db3cc8e6cd1620dd3feff77bfa11d";
        encryptedDeck2bytes[12] =
            hex"eff8c93e14349790f012c403c4521cb340a780388a397a54f27b68da443815ed851edc57a221dc6c2b585963e515899fbe83db79e08e4a01f6a9f2b8ed419b380f6839f82eb890ec35ccad9e1815fe9d726dad6e0180a1cb5945974a0d57a47320fae253aad2db784c796c089580fce73135752a4ddbf3bdd74d4eeb87115379602184e70a284ed0cbf395ac0ba233c49d7efe49f9aa76064e4a094cc1bdc0bf169351ac2df3900ea0be48171a6dbeced1487e6951032b2d82d67d0425bd562e2fb6a1e8a0b9e54313ee3d8ef583342a08f7c2cc82359ddb8d8cbbea9922f203642af2e58bb9775587e098c0ac2140924fcf2920bb1c35f643ed554d8d321b8d";
        encryptedDeck2bytes[13] =
            hex"776715d13aa84251773d0b602f7b70a71635cfb429b06679534e44b0ae406c9cffc7e56bc0900597f5039f381631ba95051dacb1b4a7324dac4bced76302244cc8370635e5f72c4793c93bdd12fc0641ea6598d381b0fce7e5ba8e40b6b8efe619fa47ab5f70f9a251267d048e70d850f0727a18771419fe6aa65ac466a32646f48eb52e227e5810c99b0aa5fb38a070ba0a674d5e3daf093d3e12c6ff2c39c5eed5792d051afe2fbd150c7ae135d3da561c285e3b5fa255b31e78c49bdaa2e3b305b6b4711ee64d3adb5b045a37a6c42f1a232a5b996881943b542399393a242489d7ef3db01c3a5a01315a4719001f8e25f63843733e8967b45ef30ea52c69";
        encryptedDeck2bytes[14] =
            hex"47d54427bc864f52971ad8abf27ffce6b7345f8d7dbd01525a1ebc1dd057121d03100a45bc5b188b9e019f0899a5005e55298e1a241d865d82179c1b9f205236a4e1e212dbeb375d25b576d80bd8d63791e08f1490e972f1c3057b6ba46c4165e9257dba3c8c1316a8b4cae5fec4031391c9e4d4aca6c02b7accade8648cc8a0b0970cd62f47f78530053570a5956e11f05f50d56cb1d0f5bc71da5ca3c758678f0f23fec9306e28cfac0b1b3e61d7109f921467c863869224a98f5e9d3fe4477d98b6d93fe355673952ff247b381073dff9c315e7a8280cfa69e91c4a4b6c3f19008192438b5cd202c645ec8355811be31aefb745322e99fd549ab0efec7221";
        encryptedDeck2bytes[15] =
            hex"603ac1010de2c1032aac86850cb4df4bc74d621072551b193638600f2311e425835843cebd71f28264895d5df8e03e9f2852b76c1340b3166ce03d3529666bcdc8f40fc5246192d6d6d63b449247ec7af4c2a76359f260e39c48aff7225841799d8ad8370f9f6472154b6ab0da4b2487cb05b430e1af60f7038299cb612220119891d08f9ea206a79fb7eeaf7d14f4be30bb28ded8777c27ce8cb17708290f0e9c55d996ecf1803bd16a6f91df76be4682f79d085faf4b89b0f56ac6dd5adc0ef276853feeb09de1556834a7ac41c52a1c8a7248d12e6d159f3e0cda0504a94f44d581d81c05f804d0fa60ca01957cdc1769b47a4fd43f01aa7bff4580fca920";
        encryptedDeck2bytes[16] =
            hex"825878f5fa7aab1787faf85d30041d5f84f801ff3f6c69484cdac64b82087580656d378309d6ac471bb8efcf4658132b1773a438c281a2b6e91ebe2c617bc16ac23d3fa268927214aca5950485b22e96acdaad2a98da5bc6d79d309776b898301395379e200a84bed194b2b33aa5b9859fac8f4c6a6fa2aa19e86792c94a8b23a2cddd82d045c77fd145e5af5bacadbb9ca7fee97be90db710b89c50c97f856490d64bdba231994ef4096317f876ac156b364be732e454c9134c16cb5994725df3702f83b06324d0b4689a3fab81757853476dedf8a7504ba0ab4164943578dec280e90b637a4c3d37446de1e6623fae3a2d239fb0b65d8a4a0243ff4d5c3e3c";
        encryptedDeck2bytes[17] =
            hex"7e4a4a915902380a1565f10988071e1eca51bf9bce6ece3664aab0a7f8ec5a0442433ed7476c326c5222ab73cafd5f8abf3795b24ea498bdf10ebe92f1c51758b7f61a131013c4cd52f78b5b5d8c77a6479e996e060920d801b68864938a44dfadba43f5096c17a6ebdc1c5149739f3b09542fbee41a7d2f7ef6ffaaab614e70e4b985b2f2840dc7b772683ec867604f696f43d7255ac60ce9174734b6eee8351c93a8f614a2343a2fb15909bb99c8cbb417eba0a1d99f3ec531485044781ce44c87d2ede1d7654acf03801f0f623f883938003c4f443fd40c93a8d2de5fd5377478fff26f46bf3d2bc996459e6057aa6c4f3e262f49a2ea03edf6038ca751b9";
        encryptedDeck2bytes[18] =
            hex"41a852dc7eee74a464738dee03340c52988d2dc2826810d9d94b09a0f6b0355461dfec8bb7a7e81ae83fe38b20e613846e03cd2a531ea2776cf19bfdf6d9aeb3dc25588b0fa3a2ce952a16ecb044f1fc8ebe7a0a8af83939ab4fce087ffdf1bbd9a19fb0839942ab02954218093d473c1b5c7f37b42534061b8c4cd64fec5d2c157af1fc12ac9c9a2e01223842b84fc14fb18da8b2043812f4df393abdf3c5b7cc04f017ae87a2bb49ba07ae8b8511627e9cd535cd1c2eb44111b428725adcdd827ed4db7b997714d94f7b63e7bad838d90fc095ae536ebc4a9f8f85e1e9785fb3ca66a8e2bd20112f936b2dbbb77d58082b106c8f92ba054dd35e49784a6af2";
        encryptedDeck2bytes[19] =
            hex"b0b122965405adb4211c02137591401622c8dd46ae23000887068f8e9865866f5e4c7abd1012d2723cad738380fb0b16d1098ec4054ea12567f5e170d4b33268c0c32c83ebbda4f6268b9635871a62249820900ae85793cf6a80ed2a9f79f5090c741686bfadaf1f494ad75aa2f12117ea861b1b953914b8e82fe984d44c978e5ac7a6bfd7fe6a52250c1d9c57f40520af467bc687757379ee1b5ef0b785dad335d58b07d2849536cb5e9ce9fbf4d73d117f6292ea450261179e32c6d6940007748e926cb53fb5a87f4ee6f9076d38ac7866cfb10d7d47238aa5cff7bc9e9a8881e99539a6ce94a849520f027169463527a5a71b97f45c99c473035a68ad44ce";
        encryptedDeck2bytes[20] =
            hex"d81630f906acfb383800a43d384bce745c4a54782974b7b044dccabe48047cd76763ff091cdaccf2f380c6cb8bb7558e0ec4be237629484087a17178cd29932fe922b9320f4df3844a36bd72a86557ad22b3d06d5b5b1b8f0b8d6c3fc093f0b7204f549f69f8f8af1c0843361bdf3e0b69545f3943f263aabb194a1e5172908eaf15ea9dd2e1a29bb63d2f55232ce6840578a67e6774c503fb5214b0f8cb7a48595fb63420eba77dc869620bf12779f7c11d6f030a202f5652327ab0e9851cc2d0bf363871dcfc2bfa5675d825dff206f33437593d74846dd00179882829b9fa99bd8fb49946ecde00443e03d6f46987d5d97ebf914646a299fc9af6f9297a23";
        encryptedDeck2bytes[21] =
            hex"c9cce2e486243a6f202f4ad7f905df5ec8569de64c249113f3a8ecfa5c2569167fdfeff79352a8ccaa9282971c4301737726e026bd705068825b722845759b890bd7e48b92090467064f4a34fc860591551993ea2fc76bf9480a6e76d5c8fa6c45158f4383c94e13aa778da443f44d9ec6363a813ec68c9025f6193c00ffabb497d12023fac2d4408092213b99c52d5afe596d2cffaa9ccce47cc956edd6ad39add03c81eb2411e6b9c74a82c490edb631eb6f43ecc36c63d265028494676a6587d49b0f107b9ecdcf88bdd65a244debb82b5975b159aa2df807eece541c7ecc9877a2995011961d161bb40c7f5295bc5f2dd481d8cd5ccd5e52c298001d99ee";
        encryptedDeck2bytes[22] =
            hex"9d92fc2ac8b89f734720848bfac7adfb8e86b20667c54fba5220c090965319740506d1cbcf5f393775c97604df0442c14c7aa804d7c52be7209a4f680ace23fbcbc75ba282a6b8ccc3469f462e8bff4e07b9b257536a32b9f6f5b713ee4799ecf5df9abb867a8706f3285b68dffd87995b71b4c18629812c1bfd9073ecb4ce0bbcdf19f131e3d2a114fc7f166d15a6da592ff86a583d8842a70b52bcd3134d4b57988e5747ea7c57a40c0a0f3712a4f2f57937839f9f611f638ff3442d308eac5ae7bd8e015d2cc27f40dabcf5968d027fe68c812c755c2f29c0213fde3fad5af03d283b7957fd72cbc6160e73e7aaf57ec74ad725c217b24d4ef1a89bb9ae08";
        encryptedDeck2bytes[23] =
            hex"781d59461b6a5d5be2bea64b98bb2d8aabaa8dd0d319ddbde3d6fe2b1f457d3ba113211d42b901fb9c60eff6523e72b0d811d4c27da5b4d7dbe8be75497e73d5ef39908b43cc303ec26c2b7001f8936b447c84640017e71fea00db016f1bf5359e3665eb5079473b45bc938353ece36392e6ca21eb98f10a1fb69e9896c0e2fc499d6ad8d5e8b2dcb56e5506658a41fec8c180aa6aad2d2a2184a612d11b55855989750ef9f968cca9bf559d08bd031d9322ac6ea6924760e1996d1a1993157a516df0f01d8d86f86efffc5e7be5074d324dfdbc15ef86835cc94f3c75fde1580f42e5090e78827c5896bb86d6c253e6915f5edb79aa2e55546cb99c15054a8a";
        encryptedDeck2bytes[24] =
            hex"29c5ba977166d84bac616e27772dbe13b430020221a34e352bac6b84fa7c9c3e44250f3d3260d8a1b06850f2c787df72be44afd3e8b9a0b5fde91abdd6c1a6abb5dfd7c4f0390566a99426c140944b0c3f049d09e4d2b2fd5d97a2fe333a3dffd8f611fc42bf5fe1d22419458f9b8860537b6946aa3ba3f2ff5848091a4d9a41646f57b2db65f065184abbe15a430280b7ab35dd1fce8710a1e7449ef5017f410ed1549fa17fba2a716521a3623ecc8b6e71c5cf863932dd106db1d53622a3722387692b4cbc8dfdbfb7b3ad18179615c34c35226992554e8d144d2370f04056e95d0377f04a9599a7f71070e68aa64d8e35660b65bccab1a3e2a3f2e441c988";
        encryptedDeck2bytes[25] =
            hex"0a7d08fe01b070e27aa6daa5046d2e36effb0f97884cccb13e365b9c5d15dcce81617c48aa6dd1d68cc18661b380fc3c31019d815f990d8cce5d89e8bdb89a08a20e96357da61167394512d66f94c3647ee984209771a11b6858744ed87ce8f290d0bb35c5b0f081cad7da2df911a002015de444082c9ff66251b73fd8fa1aa68c49c3749c062b8bbac0a509b594bbf5c7ea8149ecebc4dae3f33916d8dd1a2ad3cc6f3e6e37720cfd0a709de6c5f0642d1079ec887370fc720f06e14d6a31aa15277e8b2d36c6860f7a590f31e3489b7c9da8dd8c6138f36fe7d4b6711068336d98db2ee639576407fa90a8110353027bbd595a6f4455e95a81a84dd52f6d39";
        encryptedDeck2bytes[26] =
            hex"96afc76aaa5ea9baa8f79ee2a23c0083da6ac21ec306e7fd40c454994ba72c0cc28b786048830c6318aa69c92a389dcb9260bf043dc7c576dbd75fac7c0b30efdc0847c5588a204704184fc7e3fb8de9aa80b1bccf120ec9daf9bcf0117644f3621f9e71dc7f69025872bc1c24fac0af428fff1b19231dfb07aceb8da7f6a5e1ccb4496c61de1cea2725217d9fe6e6fba9cb1be09120713efb321e4f1b509edc29da5e8e3863464d316fbd805caeb001977d744139256436517d23b8849314abc165a15490a4adc4eb18b5a2406bf43e75c8af6f38ca84dcb167cc9099191247a04e003847c15a6ff9fdb1231ca0536aa09e02e939ebb351b1155a981db788b8";
        encryptedDeck2bytes[27] =
            hex"ae925fafb7e646136109bea92e424ec2bec7eddf23cbaaa1ee62f2b547dac522e04655aecdca1bdc5081fc618396d1dd421fdc5aa82cc7384adfe0ec9c2338f8024dc88b77f4bdaeefae3ff353ac34d9fa3a8ebd7537950628b1e7fa5e39f8af62cb2c261d594bcb88e3e4ee9e9c7f8b0a71150c230cae0e23e0f05add9568cc7dbfe3b59924c91f3cdb87d4885c343c41d173ac235622414e2a12eae442e552e70dfa06456b2ede09c4a38b85f4f4d8a7a883a78008600d8221260bc0cb4e17205d0d04bf8196dc04b07d59100f36618b8c3ae27d8b9e4a6ef30ef30a124a506abb63693a33e4e7819a0bdff1cd2a751a93ad4a63c1a2a55b0614eeb1c02a22";
        encryptedDeck2bytes[28] =
            hex"630fc75c8ac443ae564064dabd438d82c0c30f94a615e7c45f64b662e4a1b610a2a9a48e81e3a57bf812253e32512ff48a3091e639610f8db9932d574872b4c7ae6bfe12f5ff7e153c568119b4b2a6eeecbf94414b7949e4e25e01e81bfb4322cb6fe0d7a2fc155eca48739ba41bd1274d8f0a49c8609ead7ce1d6c987f70b88caa8494490e602a673bbced7b6fe6730ace74a5649064b8152c490c8ad5b204e55d1667a6ee951317faeb2127cfdcfee29d50004351e92e874ed6bd770dc0095e51044e390dd5d59042b3fa1c54d27fe0c98e1a91b7633f0837ec8f79455a0bb46bcc0c259690e079747ee1910daec6327b516eeba3de8c200a1485a3e49e1ed";
        encryptedDeck2bytes[29] =
            hex"e72628fff081966b9f671a710b18614e35e63d54fed4ccec91928418c0face569d7faf4e9b23ec52f0ce7feeb2536a433b17965c2fd5b385d6ed03e82757f78ad3d764841fe6326653cdaab8d8ce03934dde9a645d7741b5a931fa238e97f882d108dcc18c8db3af8c7228c5eda0bd3f62106605ccacd1bcec5a3b471b211d5e8eea1f9c9b3a8094ac79506a7ac5f75e28566ec8401e68911ac0cbc8caad6aa0c35a0fff1df65b482b63ead8792cc8f8260539cbc3bb1b0db825ebb87dcc38a4437dae815733c58c14ff67f39b9767c0d1a50cd775195eea9ccf8fae50b30380dd621399d289f71372555f5b8c741cc3b0d9f58a820bd0e9cb0c5ead05682466";
        encryptedDeck2bytes[30] =
            hex"b4bf50faf57e20c193b109671d8e3f56dd6f1faa1f209b1a6f36a5322181a1eb81767368d27d4c4d0643b7defc55beb729459d4a792bab1e6005e10a4469dc7acb0a5213443c523d80399fdeaf401914fd5ca3c77b28cebe4067955d82a84859724f0a2fd64c1c372f036dbc94233b6280de7aa91b8e3a338321516cf235d44118dbfe8fb5c0240a3edf9b0ceb39528ce27f36d8de03bb2415bcb40cca167802aa182ded6013fa4b8fb6a6f838d1ba86c89dc2d97b4fb7eb65b90141ebb055811b76ef0283cb752e64b40119a38c6e9c92763d62b6e0579b1ebd688972743e2fcff17e529b0221a854cce69eb96b2e38f5838c951961173a0a87515629623151";
        encryptedDeck2bytes[31] =
            hex"3ce3e102fcb3e68c865cebaef1f7502e48722d426800fe8360923a82fc8f09399d6ab82e731471dc774c4e71697ea7c842d39693164315f44544acc6a0a6b518aadba8a6594ff1900cd91db09922ade2cf6b7abd79c01412d122d914e46c991bef8a8dc77bf287fa28469537528f21dee28fcfa0b94b377fcb8aa11a01e563c40257e48181808816285a5a67452160c70dc1b9394f067247e8f750d2d9740cc8ed0e51502c19d30998b7b47e2720fed58a77f0ded0ded41ec47bf157df8614cd3d2e3e0a009f16e3bfc5bfe929ee41bfbbcc78524a9a4042edf9fbdb4f4f2d847b0970761dc12ccf25830964e40c418d3713c24fd7ef0f991b06b5a4b135604e";
        encryptedDeck2bytes[32] =
            hex"bcdbadc4386f06dc78db180e6d883dd852bba471011bd13e3f96d07933b9d8e3c7ca64c05752400299704095f30b25f7d9bdba5760e5bf105025e03d23d7309edf989d31f539accc3395b330ff8b86f5c7d4cb40a0cb449bec34e5c34904eefa3e04f1820388f666fa749a8076876ff7ad8f39c428388528b904213d2e084da69504ae2f7143977a728695ee11c3ed6548f0acfd8b204a7864ff5e44ef37b261929d73b87b32c4751866bb14b28b811a36da83669d65230001ee9e3815e900746947a82e20e2f43a2f7e355adbcada7cc69518c609a6788a46ec99acde1f857e6c01508483693ba86bc295d7496efe40913f57881c3a8c7a96afed4daacc0a57";
        encryptedDeck2bytes[33] =
            hex"95769f6185c7b95861f675e4aacdaf7a193a2d3f85ca199681c09549841ae27bbeb2e0744a8a4581e29ced4de84edb809c028af7f00b17f5307a50352b60cfd7b7391083d1a95e3e0fea8bf3de40916d3d418ade2dc7bcdc4b2866ae27eaf34c2a29b369593dacd727b72ea4fd9953042ec0f5a6797f3636e61ac0a3b0e254a640b66a5176605f30e1558435468b0c01f2be8245ab20f8ee57c8a884adf212ec6f13488c2ccbb22e1b5bf5f2bd58de5f873c76f67d89f60ac75a564e02f7e3b90d1704626445adb6b476a67bbd5821224bc7b11dd9af3b400190f01c7294660c542d560990f0e372b4d066d5e3e3daede30b7fe422e8a271c12655b11a4fd502";
        encryptedDeck2bytes[34] =
            hex"45003dcc3fa4cca76b86fa5641f14eafbdbeb20949fc34a730f265ca0ec74031e3bea985f7e965920a78d72860340f08f34bb39ffdfd29e63564abf98014093cbf69f3c50a4d4c1ec0353102e96e1bc399e3a2369f6289f07cf0297aaac93fbcbb407519a92f6229f3b7c1fb34f356740f408ebbc5f58275016d70ea3db7dd297e8094213d03fb865c0155486babfb9f74332f5dfc23019c3839fb0afe954727d593971b47389d332167c89aa0dac568f8b4b16bf2f43f3360b18e4e09bebfc08afef7359db695ef8a8ff42a622cad9fefeb53b59d60613216292cfebafa74d3171942a8062846cf3c78b89d74101194d2cf8d42dac884d9a72f519c329f3954";
        encryptedDeck2bytes[35] =
            hex"266dcfa7b0b08048a54e01bf38707bb68efe7dbb5a0f2a67d4050f5be2659160c2465242f21f5b2a8e2f5d558839e3ee38fcc95e3ddb194735760ac24d874c22d29b3c8af58f5c167e890cab076b214533df74ddd06862468bf7478c086eeffef7573c931d294062e101996263e579285f9759c2986b5584197723f52c821a43fb69b58db10e9178ea4a88d1314f56a293299427d5afbd875e8c82ceb45ffdd10542ad9c08cebfb299b760b74ce91884f459e9996061225df0cdd7af9ebec08f1b0746d12a9f6f230e773ae69da5c0aeac70a2027a8562d8c18aafaa97df43e3860e2778ccdf6edb9b11c3012e321210c390e9351a86ffdd4a86b0a029ecfb26";
        encryptedDeck2bytes[36] =
            hex"c7dd776680cb2f026dac86ee9857d17171b14aea657e4b68a41c743023940ee6dabc1c5a1330e587cd27b55d9e4c870cadd48409a6b5205ca76173130e4eeae7c00622f4ad533e66e37e96ce07ce7beb8dc3817b10162fd3b3f2cb7433daa37588e385fb0f7f444f8525e9ae5716d4e10ff2e1032a9dcdc04f53aa7dd9cd9dc3b6c48b5e5bdabbbb4eef3992d617b0d33895ba350d3ba65b5cccc040ae89058a88552a9deaae132ab70939d2fdb3ecd0e4a3ede8c5f5592d19c740c49513c6dc351dc3e137adfe1464c20d55b5631a468af6809297e8428f7fa3174150d32b5d619deb50c878b8ddd258df92b6ecc9789e61e8d98b935c2181ab6307f655c817";
        encryptedDeck2bytes[37] =
            hex"eb34576491fa097911fc21c4b315608ef08c7fb86fd267fe79c299bc4a16e9d2c0a9a7fa5d8e662dba64c44a2dae1de39353a4e2a3b2bd7ecefd0381970ea19cde1e8a137864dfadad7bb46200f3ba83b31aae20f0487ca47f18a25671c64bd336e3d06aa32c20c7722abf27ded2d789f868c5935301f737874ba32f390a5a114cfe776c78fc3a4cc64ccddb0e0b44ca5b8f29da96acb03b426220e4dd3e07d0379cb2e4ab85c05cefbbf4e6b609ac41dd239a1254c5d0980640ba3392e88e1dea660b1725bf8511fa64821437b69db0ebb47a891e7c6f6230e728400688a7282b69fcb2c6bd84137dd036f7d47604c77eb7db0403788b8a1120aca8c61d10e9";
        encryptedDeck2bytes[38] =
            hex"9357dc7ae9a851b7a1e4327a637ebe26b5393dd7fb72c42fe91cf8703390212f40acbb6608418eebf671762beaeaa2470d18d88e92e93e0813644fb0f2d0d666f8c3ac8b5de076f6d90d35b1aad264229f5b8990baa7be130959617de6aaf6f28080c908b6e9498367503c38f944b1774eabef970752cf8c21cbc779ba2b25e463aea7473786bdfdf924ee6d76f33b1d85497a2b4701a7b5b7d75c7edaaf1d6c204bb78a9fb24bd559c1fc944758fbfb1d65980b134d53b731dd4992ed2f31c8b8e57efa6e878eea39d83cdbc5fa1ed75eed1c4f49bd9266e5de2f17c00815d43cff2439245633b1ed1863b36447bf2dd5f98612eeb5e87d57b967456362ba56";
        encryptedDeck2bytes[39] =
            hex"21a95dce2e75f230c7375f802733bf923ee37d3b3fa818115b4c403de8446545fdd11de5ad8be4ec1d3bc83bd0d278320dcc92c700ff8cc40dc91b8af7545287a1518ca63f3baad7f638136ef048dd2b748c7590bf303d1fb1ca52986cdd975f0d402aaa158285b206b2ec81ad3753cb26caaa2b9d9158fdc9757838de7b20dbe846a8131fe27cf4e4a3c10033b867a85139bfb872b1f7bc52a49a66cfe044e2264c0ed48660f000e8b50d86e88505f8003505426423c7c8743814df0be9f87ed5b6afffafa50ef1f4ed7f6bdfd92a358f2d59bf16cc345f64e51c000544f9084d4d314607e37b99910161385686d645f2799b1862e3557117ba07fb62d7f082";
        encryptedDeck2bytes[40] =
            hex"0260ac34bebf8ac7957ccbfdb4732fb57aae8ad0a651968d6dd630554adda5d63b0d8af12598de20f994fdaabccb94fb8089807477def99ade3d8ab5de4b45e48d804b16cca8b6d885e8ff841f495583b4715ca771cf2b3dbc8b23e912204251c51ad3e398741651ff66ad6a16ad6b6cd4ad2528fb8255012c6ee76f9d27a141102113d4e082b81b8719aa288f0a211d61790b253fcf358694b08edeb3bbdfcbeb4729735318a7e3745a5c816d0c29d0bed3b95f665e05e7d5d969eb233186b6c756c55f901f477a44b024cdf9a4dcbb487ecd7a399b180447b8a393056520e4d18908fcfdd23d63f104e16f80ff82fae0018e676c6ae0a8ce590c5653c59433";
        encryptedDeck2bytes[41] =
            hex"b1ea4a9f789c9e16681d2b116cff911fe3f97225eb5fce6f460a4ede5ff1d000622512a90e0b995372baeffec2e4cd61c767c2d0530b4ea71352f0e8255d9380e59263c5729e66ff1ab95a098cd55ea1055fb6e989a1e5bcfa52436c890546b0446a018f42ef6b4a7a0664d1ca528ec2fe55249034dcfc7d09c2146ecb60e8c9e6c585dac37c280b6adbbae4b14fe01a665315616d74ebca9184d4bb24e466c2f09ca109de1c2955e17264779b4aa8df21c05fdda5e0708ca1c10031582f30fa28dd2f5ee19eb5b6b5f0f61f8a810bc8a267ce026c9890c03a7cac6be32346c3ce0a3f685d9f0ba58e7f594faa25beb1e5382a20aef76d79b46208416c14f884";
        encryptedDeck2bytes[42] =
            hex"066eda996037fdd50811d3515c702ef63554cd34174f319f560645f8d3f9c1525e37839ce80357fbc32b42063826489bd8c58efaebbc0393d64d8a4f4e01eff697c770a62527641fdf97092d476f0c7419ad706404a0662c9271cc1bf54e95a22af5c78caf128369e51f43cc07df85b76b0584b681d77a7bc7604f57bb10ddf3ce356ba4be4471d3a0ed2799224f6e8994b1c637965d7d30bc51e3fac64c7cfb5f89cc58e0a80cf838b2668fa9e90d1a75f219a5f768bb7223f43866384ddc306e3f21f55eab07002a153eee95c412ab628e3b2be2fe287bdbd03c24bb3ac48c1f90f215f205ca63fc7fb90bc9016afeaddf73e0edd79b49146d5a52147a80b6";
        encryptedDeck2bytes[43] =
            hex"0e8b3762a328e3efed3be1f8ac6a2d77aaa151faf94a67c32666713fe631f84aa48b74f46cd84bb15657cabd2edbafdc893dac07d3761785c66d89822d6f441aac55bbc4d624beae92f31c7f97ba7a54e42597dd2a42dc0a3e3f1c81bbab3c42f6abaededc4f5d99b090708fea43ba4c97b643d18e81c570fd431f27f6e357594a5e1b4479c7e543d494227a48da0961fb233c5c437a0c850b948e32eb6db75a480f1223fbc6d721c1627aac23a2d3ade42eda33197e2686c029d55c62868723bc0fdb20fbc2860bf4df732fce027e8b96ad168f35c4496b03ff6d4826e60bdabba0c447da6ce4641375684459053b06499b3ed3f0b11089a095f64995e459bc";
        encryptedDeck2bytes[44] =
            hex"288c928e4ccfe7e9656045297fbf6d09f2ff6d22e4667fce6ca8ac3532f052ad404c7751346811c07a5ad477859e1d27c7e67bc79afcf334528c0b46861745939110a0836958435db56662ed3ad94e8fd1c5762b4388610fcdc64cbc49aeec58a10026f3bf7da3b6a1688bce683a1ab53fac5fd20a97bc2eddc61d1f23394905d8717897efe832abd27b1e9900e72787009e9c4239cf0ebffe7dced487a2f351540a3e9d95e8260b5b515a15c2e8fae95e30c884ca9dc4b1864ae46ab487727f6f38cc39205d8def8915a4869503c2f9994b36d10a770bb1dd3d70af4a6b941b9d3c5949397a1e9c62c9c623adce2dd0d0a2e3064eb9b9d1b3f39f0be0da15d2";
        encryptedDeck2bytes[45] =
            hex"9984cdc627402c65d48b7d3852caaebad3e06fa2f6c7b4a869f0aaed0d36fdf7e1dcd9200cf4bf5cac3331a963a98f20f43e997e63e821ee288a4fce9b1779e9c18036132a280b856998959d0666485da27d9e9ac098f7cb210f0ee10b19469c9004a7126fdc19ef0d6fc506eecb6d4ec5195533ffd45bb1810c288bcecb9158fecac221542218e8fb2901a5d9d0596e25f73d5801af40987f69fda0c082b01be355eb71ba5b1742dfb40000fa35c1a93e5ad73d0e94ab95157524c918143932b3ff60f832d16d3c99dbc09c5977571265d71ecf83124bb795a888ae286a09b3a2353f2285247072c04b3e722be5c2f1b0e9655da4555d12073aa3acdb04c185";
        encryptedDeck2bytes[46] =
            hex"cbeba5cb2243a20fe0418e424054d0b22c578d4dd67be67a8c4c89d3acb02a62fde61505d59b5f6296bdf9b919a73aad061092901a922a559f7172ac7e0594f9ca4d488405d1ebae3d2ca0772ff432dbf2ff9537a2e76ac289d973a71708f6c5eebe79a4261db1676ade80104848ef2ba64b4090b0f2f33aea451265f7b6da7674d8e32e399c757368c2b703695cfe3f6bce754763c9ee05846e155cc119a2b9fc97cd83783d783f7b6143e13a90d01a9bc24e2f57000eb767e20f3faa301c55dc0620770639bd9a4a27277651825036a505ee44414b530713baafd306a8cf04afa5d469bcac45ddddd3b72efeeeb17c6c3fce530d0016c1c7bfb103b70ab49a";
        encryptedDeck2bytes[47] =
            hex"ef4285c933727c86849129185b125fcfab32c21be0d0031061f2af5fd333054ee3d3a0a61ff8e00883fb08a5a908d183eb8fb369178fc777c70d031b06c54baee865afa2d0e38cf50729be0b291971741856c1dd8319b79354ff4a8954f49f239cbec413b9ca8ddf57e35589d004f1d48ec12520d9571cb2223d0b1756f396c40b12cf3c56bdf404e0204b4ba15092368ec7e4eced3af7e56a037600efcea4ffabdf55ca39152571b413fef4f2e68f8b9441fa58e5d08622545b88aea804e397914e67acf44b4497dfc99c34d3d5d3a105c3e83ac7df7fd9c4fec0d1bc5e4acf7971e5cbbaf11113894b0e941c77eccb4c95c07d84e5462a5734faa486d1fd6c";
        encryptedDeck2bytes[48] =
            hex"5f0198f7e94bd0a0e3ab5d8715468e42061ccd3135184cb27734a0bf5b859a947f7fabe2bf792ba12e7be0e2b6f67c5431f4835fc5840594c1832dbdd8bc0ab5a424d8839d80d0cde2a877708c8ceffe87838084b8a80ef60c7759b538ccefd26594ed2e8c5da846e48fdd39b2e9b6dcb736aabc420b7932e1f06ee16a0dced60c93f174b32448ee59e8516723b919c479ae8f43f27803d72b233bac9aca831ee18ec394e159ec1cbb56a8044020eca472b69fbda413dd5e26d29d5c5bbfab1c3e27e84dc2519dd31ec62581292df20df28973f772132378ef673065de7ffd13f8b4d7a9653581078bcd167cc8d9045f59d7317538d12e21ba8cfa5e7d94f56a";
        encryptedDeck2bytes[49] =
            hex"5ce2d6114d2c690023991a1ccdf79ceea21bddc9aac0f74bde9103e60afad948017986d47d30750b425069c0b992431aa30ad0f668622ba7a46d2d39a02c1144e5af748b29b7e986abcb212e591ec2b3e99d7f374588102ccaa85484f78cf378bbec02cdea0944f32428eacdae95154fd721a4accfdf12881da175b77356a0142f8c2e6a744aa7bb71b7bb9f542148e00c3987298e58b29e8b31efa6c7878d9e92c73293544085c3f9bcaea5ca210a4008dfc0d239d73b0a915590a145f6f92be9f662e5cc937f06a427bbe131cfefc305aedf28e2217a9fd3b46f612bf3acdbe186a5d8f89ad146c415135a493ce89f4cc537a4049e742d51200bf2c6a7dabe";
        encryptedDeck2bytes[50] =
            hex"0b334c72e2728bece62875906daceb1a856fcdb431b643f5cebf1516ce1aed6d22acb7fa2c96ce3a341ed71fef8db45803f5c59228979016fdfa7986a434e991c911208adb7b155e67e802695e91508dd9006fb115d88b536c9ec10f90dfee42150cd975b6b93e1abf6df0acbe8dab14a3d2344d7cb177021761fb140917d75be158791f4f708657a693ef6a1fe65d83d6a19aa6f95b42fbc839cc62aacc35ea3e806b206315dca9e9b4b9c00e4d1fa76a16fdfcf3a61607a089fb36cb22a440b38fb8c6d9a56731439efa695390a9247fd1836f46b756f53875cfcf4dd50f675851e848b701bda606901ad4a0aca6c97ef6c1fda57b45b5473a02f6db8f8b5a";
        encryptedDeck2bytes[51] =
            hex"7a3c1c2cb789c4fca2d0e9b5e00a1ede0fab7d385d7133247c7a9b046fd03e881f19462b8501b891888c67184fa2abea66fb872bdac78ec4f8febef9820e6d46adaef483b7951785f94981b23566c0b5e26285b17337e5e92bcfe031b05bf18f47df504bf2cdaa8f062385ef584184f072fbd0315dc557b4e40597c28d7811be26a52de314c2540f9d9eeace352212e3363688c4cecc7e62c175f218a45e4b05a85106108712cf256b594efb7ebce581fcf98b5a10cee9b4771679d52f5bc76aa59f7658134ba5c4e99e65fe734309981f28928aa5e12f5c787c1041288a3190267116d97b13323d204ebea9565e6fa69e7158acaddce849bdd9a807cbf26536";

        bytes memory publicKey1bytes =
            hex"3604d113ebdc5af0d64c20b264ad9510bab5a5e30838e74f9166001957d57a4381053ea18cf365d4056c765553fd01701a16dc492b62b4aca50f4a7305f69d450c892d9fac8e5bb2262b85a8f5037a061a5f8374bf8d58172908c366a86a6768730a6e1b1f673d43c622b6bac660835af06f1d600193239c22461791f878dcccb5ba2d378eba454e0c35a2378d0389be911227e3fe82bd8071e5889feb8fe21696ff0170ba2c81b3ca734c07b2f3c1b3a698198151344f5cf4d473885b69d8ed97774ca246663e4dee223fb4379a86186e63ee49cf1a3afd07521d0d184db11155e116816e3e6432ca4cf577064e5e74359b2e70c4521b257dd2bfc4fad83ab3";
        bytes memory privateKey1bytes =
            hex"17961b1f461e2abcf70d0d2d6896ebc79602890102fbba7114bce0282452deb807b1cf193dddbe5330eec10abd9f35ca30cdf4c7a404bd5e7b8b493d6126361df60000f3ca12f630e95f4afdab15a7c264ee9c3df641ffaf008821a39c778fc163a8b54a6bb712437aa5bbf3a2c383362c69333bcc09f28804b61ca64012bb941ddbd7aa792416646504293e843e5f68805cca9a0817e23dbcff537f0b0929ccb6dd597ea3e63f888f70f954e71f59950b7a8dbcfe02128d7366499e5c7541910d4f050e9ee95bed9c045d5fdd6de504d080fccb6a06ba1f95a9de7fce9bca740028729c79ec352c32afb1f816708dcb997541ff8a281129588d54b31cc7203d";
        bytes memory c1p1bytes =
            hex"4cac7afdf6ad93a087feeeabc487b24f5d3e4bfddc2ad0f0b552fc3c9dddd1679fac28823d558249d5a505f6fabdbdbc334680352c1f7e138127eb7e0721cec9c76b052285d2df3114658f202a5a9b1a2447944264b3d92d3a25a8a173123572996b73a3ecae06a8786d2cf248907d2ab02189bd2c2ded9dfd34f061ce19f59c4bbd680cdcf9dd514a2d97a7d6c378344ec52cc257b81ce60d486b1219e06cde015c156a6541e8559e4d5d3c97ba55b0aeec065375e9809451b5d1bf2e8754413be06a9d9039cc005a9d034ce2175c908f13b20d68220e3cd6b0e678d7950dee01c9c1f2a45a398e985a81450767b24a9106a9cecbf7c2f105e0325ea2e14fff";
        bytes memory r1bytes =
            hex"42487fec44e8ebebfae79a43ec4f15e29a5786ed7f560c14b1e063d1a665c26364c68ecb046fb187000fb48f5cf25cdbe5fe556040b8c501744ec352623fa6dde35cb29e971309bd5ffd2350336972a64e12fb38ba7470d08b5b05b065c42e82b48c97a3e4c577d7b78576cda00deb05caf92f56a7bb414a54262a399182ed8cf49954981886269ab273daa3da74e75541c5045f88dc57420e5d015e9f6cab562fa6580351410c31ed0401be6e6784641ffbd822fe65f0db9aed947d9eb8caf50ffa31c143492fc54aeda70c7ae710f4bd3b4fe3bb5801e38d72f47652f92db0d8f3cf2dd331a7786c887a6a176414289e76a7eb23c88bb87f05c01e21af7aac";
        bytes memory c1Inverse1bytes =
            hex"d0e4ca249ae1abf77c69caf75b86cd62a81508db62ecbb1a4865f2c7c5b1c869650bc6e29726dfde0954bb40e91a2a1b58e2d2dce2ea8839ae99f4aeb344783178bd9bb2e97747f01fdd1c347491ad8073bab344cae983571fb3d33e1b1fbd5112792d8092651304519e14fe1d02f4f33c8df47f5d1f4ccb939dbc1427bc1005fae10c708737121058999d55130f8dfca7e6a1b9e06bcf7fd568995657ee2ad21fa8c27ee64c11ab7469a6034aaacc4ae971ec0af448fc5ef2c5d1d51d82960ca22f7267aac4b7ad414546bec436f225b8b1e4b42d555cee07abbe539e55aa8f80d353a03d7a7b128099aa22a44dd2ac2d7528d55a953f8c293479c52bcad705";
        bytes memory c1InversePowPrivateKey =
            hex"d0e4ca249ae1abf77c69caf75b86cd62a81508db62ecbb1a4865f2c7c5b1c869650bc6e29726dfde0954bb40e91a2a1b58e2d2dce2ea8839ae99f4aeb344783178bd9bb2e97747f01fdd1c347491ad8073bab344cae983571fb3d33e1b1fbd5112792d8092651304519e14fe1d02f4f33c8df47f5d1f4ccb939dbc1427bc1005fae10c708737121058999d55130f8dfca7e6a1b9e06bcf7fd568995657ee2ad21fa8c27ee64c11ab7469a6034aaacc4ae971ec0af448fc5ef2c5d1d51d82960ca22f7267aac4b7ad414546bec436f225b8b1e4b42d555cee07abbe539e55aa8f80d353a03d7a7b128099aa22a44dd2ac2d7528d55a953f8c293479c52bcad705";

        bytes memory publicKey2bytes =
            hex"db24a5cd01c51e96022355d1eefba6450bcb5e5eb7bf63e9cc65edb689c3767e1f385675d59642b4cab1b35899116715219de479814f8d968f2281d68205b11dc2cb5e27634c256feaabc81d5f8bacd734c42a6001517beed16a5c348a81ae372cb9637f54b496e28f04f7f20c852973888436053fa84e00cd512b477550beff3c1231b0fa2b505feca3d18ebf1dd3d70690558c179ae271e5b38ae06969b260962b2b008924e283b53ce8126509c0c19090621f960a3ce7cf5eb175246f08625854d438514c2a6842439f91fd693c6540b33f2a3d60907d201f97abeede6556f1ade44d2071ecb609857bbb65a8797d713f8c5e2097f2c9ead14e13037ed3cc";
        bytes memory privateKey2bytes =
            hex"ab3bdb680cf7a5d81d32b1a3d6114c57803ef26b1a9451a24653f1b146560f423c35cdeb8ee4fcbd1df5cbf6643b9f544cdf2cc779fc6f9cc28929eaa38eb1a8742b84c24947e254f3c5434e34b2daf71efa1f6326128cc7d6d6500c8d963d4759189e4bae75e34d84945beb541a9b9cb441de2522066d057e0562a16d71b26a1406d054790885d3dbd8fda8f311b4c60c2e8fa7b73dbc288177925f16a98308448d58186500d21ab42c4a0678e7ec63c5a59aa30e2091363c21b09dee1740f6289a75917c29e9aeca8d835ad599fe8a21dd5c910302c6c25ce50b6d16f16799ca6552ee5148d92ee34a69e188dc4161df1237b28861810f05b43d13f47ba333";
        bytes memory c1p2bytes =
            hex"f2665a38a624f4842a01609269daac7f5551e117c56297acd911b173c9b9203e8b62e8f3eb936b4848011b7c229a9ff9b57d3f0373a0d3888e5488728568a920b2cd389e19fc1359b009f50951bafe9102433b334c30383fab880e082349182a3c2beef01f923a678d916413eafb730d4d65cdbe5edeec265cc36d12bfa096019aea81a423a94b514086a6c96d13492310d2d6681066b4e97ea0c9de988ef4546aa34a231e76debfab210de0b528d890a434ff656e73d6f6422c692e439b39f37dec20c354e8639f50319298e795e1cdae8aef6473b73704f17f9b5e03538a94f24993eab43dd806ad6baacbbcf51143f789b168a3a732d00e94570f9e42e91a";
        bytes memory r2bytes =
            hex"6f7374f6984a5cacf37ae19ba3c3ada7b4b8c5c6aa772bd32b359b1861d7161f11093300a6aca0e3615874369d89cd64f65dec586a272bf2e3ecf0ad0ef5059c4f42487901661f32c9f9abf5716505467fad3363888746e054ff93782c35320940ed140ebd4543b1b0ef2ea321b0de1351af33b47fc49c808eb07523eca5be7b09dfab97c8f2c8f413a3ab5390e62aff0fa333729f36179eaefbb69b8d2ca3b4e8179afdc5eeb021e92c42aea21f8179d76288870975bf05b9caa4e8219b6c61d8b7fc04109e2734f50bbbb470b70a0269177472c95dd26130d0f1133c760a146eafff567afa75588bdde14aeacd51680299ab32423c67d3723a195787accac7";
        bytes memory c1Inverse2bytes =
            hex"9cb24052e210456485443b5dabc5df6790bebada5773b60a0d224551bfb7361cae108d2de8975310ba2560f4d3fe1336eb884e8b4ba04c0f754264fdae6c1df6f6b836ba8a5f243770c46e6d836e37f30f88aa14ac187fad220652e56daceaca4757e95fe3da86c370ca737cacb457ebfd5492c945391dce8968fb970683026258eaabfee83b9a05433329e4a8b3495c2162248dc95ea02c3d98e02073d3ce28ff97b9ff701c8894d817f6b46782d662c63720e9d2d8b50a466b402ec5a64b75e1a2f81e40ab06be8ff336605378ddb5b92ee6e41274f8b98fa7e7547c6d68a043f71ae4464d7406b88a8c7ee74553eaae2aa2399f0f4a15639cb24cdc36f7ca";
        bytes memory c1InversePowPrivateKey2 =
            hex"9cb24052e210456485443b5dabc5df6790bebada5773b60a0d224551bfb7361cae108d2de8975310ba2560f4d3fe1336eb884e8b4ba04c0f754264fdae6c1df6f6b836ba8a5f243770c46e6d836e37f30f88aa14ac187fad220652e56daceaca4757e95fe3da86c370ca737cacb457ebfd5492c945391dce8968fb970683026258eaabfee83b9a05433329e4a8b3495c2162248dc95ea02c3d98e02073d3ce28ff97b9ff701c8894d817f6b46782d662c63720e9d2d8b50a466b402ec5a64b75e1a2f81e40ab06be8ff336605378ddb5b92ee6e41274f8b98fa7e7547c6d68a043f71ae4464d7406b88a8c7ee74553eaae2aa2399f0f4a15639cb24cdc36f7ca";
        publicKey1 = BigNumbers.init(publicKey1bytes, false);
        privateKey1 = BigNumbers.init(privateKey1bytes, false);
        c1p1 = BigNumbers.init(c1p1bytes, false);
        r1 = BigNumbers.init(r1bytes, false);
        c1Inverse1 = BigNumbers.init(c1Inverse1bytes, false);
        c1InversePowPrivate1 = BigNumbers.init(c1InversePowPrivateKey, false);
        publicKey2 = BigNumbers.init(publicKey2bytes, false);
        privateKey2 = BigNumbers.init(privateKey2bytes, false);
        c1p2 = BigNumbers.init(c1p2bytes, false);
        r2 = BigNumbers.init(r2bytes, false);
        c1Inverse2 = BigNumbers.init(c1Inverse2bytes, false);
        c1InversePowPrivate2 = BigNumbers.init(c1InversePowPrivateKey2, false);
        // BigNumber memory card1 = BigNumbers.init(encryptedDeck1bytes[0], false);
        // encryptedDeck1 = new BigNumber[](52);
        // for (uint256 i = 0; i < 52; i++) {
        //     encryptedDeck1[i] = BigNumbers.init(encryptedDeck1bytes[i], false);
        //     encryptedDeck2[i] = BigNumbers.init(encryptedDeck2bytes[i], false);
        // }
        // Create test accounts
        player1 = makeAddr("player1");
        player2 = makeAddr("player2");
        player3 = makeAddr("player3");

        // Fund test accounts
        vm.deal(player1, INITIAL_BALANCE);
        vm.deal(player2, INITIAL_BALANCE);
        vm.deal(player3, INITIAL_BALANCE);
    }

    // (gas: 7,682,186)
    // (gas: 4,980,995) w/o initializing deck with BigNumbers = 0
    // function test_CreateRoom() public {
    //     TexasHoldemRoom roomTestCreate = new TexasHoldemRoom(SMALL_BLIND, false);
    //     (TexasHoldemRoom.GameStage stageRoomTestCreate,,,,,,,,) = roomTestCreate.gameState();
    //     assertEq(uint256(stageRoomTestCreate), uint256(TexasHoldemRoom.GameStage.Idle));
    //     assertEq(roomTestCreate.numPlayers(), 0);
    // }

    // function test_JoinGameWith2PlayersStartsGame() public {
    //     // Verify that the game state is idle phase
    //     (TexasHoldemRoom.GameStage stage0,,,,,,,) = room.gameState();
    //     assertEq(uint256(stage0), uint256(TexasHoldemRoom.GameStage.Idle));

    //     // Test joining with player1
    //     vm.startPrank(player1);
    //     room.joinGame();
    //     vm.stopPrank();

    //     // Verify player1 joined successfully
    //     (
    //         address addr,
    //         uint256 chips,
    //         uint256 currentStageBet,
    //         uint256 totalRoundBet,
    //         bool hasFolded,
    //         bool isAllIn,
    //         uint8 seatPosition
    //     ) = room.players(0);
    //     assertEq(addr, player1);
    //     assertEq(chips, INITIAL_BALANCE);
    //     assertEq(currentStageBet, 0);
    //     assertEq(totalRoundBet, 0);
    //     assertEq(hasFolded, false);
    //     assertEq(isAllIn, false);
    //     assertEq(seatPosition, 0);
    //     assertEq(room.numPlayers(), 1);

    //     // Verify that the game state is still idle phase
    //     (TexasHoldemRoom.GameStage stage1,,,,,,,) = room.gameState();
    //     assertEq(uint256(stage1), uint256(TexasHoldemRoom.GameStage.Idle));

    //     // Test joining with player2
    //     vm.startPrank(player2);
    //     room.joinGame();
    //     vm.stopPrank();

    //     // Verify player2 joined successfully
    //     (addr, chips, currentStageBet, totalRoundBet, hasFolded, isAllIn, seatPosition) = room.players(1);
    //     assertEq(addr, player2);
    //     assertEq(chips, INITIAL_BALANCE);
    //     assertEq(currentStageBet, 0);
    //     assertEq(totalRoundBet, 0);
    //     assertEq(hasFolded, false);
    //     assertEq(isAllIn, false);
    //     assertEq(seatPosition, 1);
    //     assertEq(room.numPlayers(), 2);

    //     // Verify that the game state is now in the shuffle phase
    //     (TexasHoldemRoom.GameStage stage2,,,,,,,) = room.gameState();
    //     assertEq(uint256(stage2), uint256(TexasHoldemRoom.GameStage.Shuffle));
    // }

    function test_NextActivePlayer() public {
        // Test joining with player1
        vm.startPrank(player1);
        room.joinGame();
        vm.stopPrank();

        // Test joining with player2
        vm.startPrank(player2);
        room.joinGame();
        vm.stopPrank();

        // Verify the players' index and seat positions
        TexasHoldemRoom.Player[] memory players = room.getPlayers();
        assertEq(players[0].addr, player1);
        assertEq(players[1].addr, player2);
        assertEq(players[0].seatPosition, 0);
        assertEq(players[1].seatPosition, 1);

        assertEq(room.getNextActivePlayer(true), 1);
        // assertEq(room.getNextActivePlayer(1, true), 0);
        assertEq(room.getNextActivePlayer(false), 1);
        // assertEq(room.getNextActivePlayer(1, false), 0);
    }

    // For one player submit: (gas: 3,486,222) to save state (and emit event)
    // For one play submit: (gas: 768,315) to just emit event
    function test_RealKeysShuffle2Players() public {
        console.log("test_RealKeysShuffle2Players");
        console.log("encryptedDeck1bytes.length");
        console.log(encryptedDeck1bytes.length);
        console.log("encryptedDeck2bytes.length");
        console.log(encryptedDeck2bytes.length);
        // Test joining with player1
        vm.startPrank(player1);
        room.joinGame();
        vm.stopPrank();
        // Test joining with player2
        vm.startPrank(player2);
        room.joinGame();
        vm.stopPrank();

        // Verify that the game state is now in the shuffle phase
        TexasHoldemRoom.GameStage stage2 = room.stage();
        assertEq(uint256(stage2), uint256(TexasHoldemRoom.GameStage.Shuffle));
        assertEq(room.dealerPosition(), 0);
        assertEq(room.currentPlayerIndex(), 0);

        // The Dealer should be player1
        // and player1 should submit their encrypted shuffle first
        vm.startPrank(player1);
        // BigNumber[] memory encryptedShuffle = new BigNumber[](52);
        // // initialize with 2048 bits of random data for each card
        // for (uint256 i = 0; i < 52; i++) {
        //     // bytes memory cardBytes = abi.encodePacked(bytes32(uint256(i)));
        //     // // Use the contract's instance to call init
        //     // encryptedShuffle[i - 1] = BigNumbers.init(cardBytes, false, 2048);
        //     // convert BigNumber to bytes back into a BigNumber
        //     // bytes memory cardBytes = encryptedDeck1bytes[i];
        //     encryptedShuffle[i] = BigNumbers.init(encryptedDeck1bytes[i], false);
        // }
        // room.submitEncryptedShuffle(encryptedShuffle);

        bytes[] memory encryptedShuffleBytes = new bytes[](52);
        for (uint256 i = 0; i < 52; i++) {
            encryptedShuffleBytes[i] = encryptedDeck1bytes[i];
        }

        deckHandler.submitEncryptedShuffle(encryptedShuffleBytes);

        vm.stopPrank();

        assertEq(room.dealerPosition(), 0);
        assertEq(room.currentPlayerIndex(), 1);

        // TODO: encryptions should be calculated from player1's encrypted shuffle
        // player2 should submit their encrypted shuffle next
        vm.startPrank(player2);
        // initialize with 2048 bits of random data for each card
        // for (uint256 i = 0; i < 52; i++) {
        //     // bytes memory cardBytes = abi.encodePacked(bytes32(uint256(1000 + i)));
        //     // // Use the contract's instance to call init
        //     // encryptedShuffle[i] = BigNumbers.init(cardBytes, false, 2048);
        //     encryptedShuffle[i] = BigNumbers.init(encryptedDeck2bytes[i], false);
        // }
        // room.submitEncryptedShuffle(encryptedShuffle);

        for (uint256 i = 0; i < 52; i++) {
            encryptedShuffleBytes[i] = encryptedDeck2bytes[i];
        }

        deckHandler.submitEncryptedShuffle(encryptedShuffleBytes);

        vm.stopPrank();

        // Verify that the game state is now in the deal phase
        TexasHoldemRoom.GameStage stage3 = room.stage();
        assertEq(uint256(stage3), uint256(TexasHoldemRoom.GameStage.RevealDeal));
        assertEq(room.dealerPosition(), 0);
        assertEq(room.currentPlayerIndex(), 0);

        // player 1 should submit their decryption values for player 2's cards
        vm.startPrank(player1);
        // the encrypted values submitted are not correct at the moment
        // submit card index and decrypted value for each card
        // card 0 to p1, card 1 to p2, card 2 to p1, card 3 to p2!
        uint8[] memory cardIndexes = new uint8[](2);
        cardIndexes[0] = 1;
        cardIndexes[1] = 3;
        BigNumber[] memory decryptionValues = new BigNumber[](2);
        decryptionValues[0] = BigNumbers.init(
            hex"aa3fba1cccf1016364b3c50ddea9e7ebcd69106c49d4fbc6aabb293981fbcc13d2e0e872f1dd849eca0ad0cceb8b8f88dc730ff800b576efe82597472d877d06df617cea1e6c9f2b0f8567ee4433456e3ba02ffcb8360ffc1724f9254877fc58369a64ac9ee54f86bffd1c785e48f85f3723d0190d6fdb078a8f0ef71a38792607109b4a0e136dc4172cec4b8fbe7ad61a525ceccdb1eb4f159d5a1e855e069a10852c27a5f7252326030011444754c57a27950dd5c41dfba7b61f0004a6f6981cf6a3c79b0324f3868845812c0e749aba49edcdbd1eb6f72f626794ccb34c4922e926d0a7e1e444a9295a0043d581601b79713bc73aadc40482d02120d57257",
            false
        );
        decryptionValues[1] = BigNumbers.init(
            hex"f1d3d80c7acc7aabc105cbd6b218f193a43815c0f2dfc61c5e2551c05980071deb3d0d84c0e126fc2e0aa6342373dbe53470bbf52a5de8f3c1d08a1c85e7ca3024894e539861e5a497447af06b6525237542ea5004647696d9140380b8b05fb7240060800725dcca380af1dd899adfd909d5d3ad62b3b636a641fffb805c67673d15c3e6c404a20695a08d6c4b800742be00df431904b32e123f99fa8ec164233a6342ff7b5f9f4767405b6f46dd82093f6c83edffcd7a4c116b5601e2f05513cb19fe17eaed3f2bdb0033f979107f8f9c9fe316463e9f8bfafffc774ea8ca65ebefd92af79c0b824e7c316035b39dcbe49651abd5d37dd32c35de98a8de00df",
            false
        );
        bytes[] memory decryptionValuesBytes = new bytes[](2);
        decryptionValuesBytes[0] = decryptionValues[0].val;
        decryptionValuesBytes[1] = decryptionValues[1].val;
        deckHandler.submitDecryptionValues(cardIndexes, decryptionValuesBytes);
        vm.stopPrank();
        console.log("Player 1 submitted decryption values");

        assertEq(room.currentPlayerIndex(), 1, "Player 2 should be the current player");

        // player 2 should submit their decryption values for player 1's cards
        vm.startPrank(player2);
        cardIndexes[0] = 0;
        cardIndexes[1] = 2;
        decryptionValues[0] = BigNumbers.init(
            hex"4ab4150beed85cabb56c4a062675d4a7c10fdefd0f28556eed8026c38b92343c7c7008d4f72c03650d5a4e8c686352282c0e59818bf66770819bc6c6fab22e2b70e56b8e36cfbc5e8251b79d3fc5812cfb63d6d4fad3de0b330197e634aa6e55d1462154ad27527d7fec19142f6acaea5c4076600c59c4b36d6682f52d02856bcea008985f92aae430aeebca5675afb733192df30f2eba6de1084573f40a4ba07ef9e5f35c00577d05b7af991f3821955b341ea6bebe3e8565e92d77b85a8686b709145d07fa4e8bbd39a59dd78b40effae56caac49247e9c88b528bd6a44209050c7de6f17077490a1d1388beda9c80530d596b261e9ad617e66ecd4aabd1e2",
            false
        );
        decryptionValues[1] = BigNumbers.init(
            hex"91356440d608385f763587cbfa1eb50a65898d510153406ab15aa6e4f2f235222be3bfdb6f4ff952a20847d5344050d86745fbe898e38801b2318793086526d87bb36404af5d1ab3101fe4cf7bc1018e90f114168855959c44eab499a96a317c191aa3f6f88b53bd379ca5dbbe143bac762be0000f1b1778011d4b6551ed164b35868b2c63f366fbbc2692ac52e793c49b6e6a2860f726d92dfcb8e2625bd43da787c641d94bcdfbaac88564548074546185dca6bb68de459072b188b43efa4b5abb6df5e9f6c55c1563cfba53abe759e0d78b0f4831ca069086595c1096a1011bb75b2ad0d1c641c8c21bb2f70a42476d41de9b5fad3ed9a275fdc43e18254d",
            false
        );
        bytes[] memory decryptionValuesBytes2 = new bytes[](2);
        decryptionValuesBytes2[0] = decryptionValues[0].val;
        decryptionValuesBytes2[1] = decryptionValues[1].val;
        deckHandler.submitDecryptionValues(cardIndexes, decryptionValuesBytes2);
        vm.stopPrank();
        console.log("Player 2 submitted decryption values");

        // Verify that the game state is now in the preflop phase, stage 3
        TexasHoldemRoom.GameStage stage4 = room.stage();
        assertEq(
            uint256(stage4), uint256(TexasHoldemRoom.GameStage.Preflop), "Preflop stage not reached"
        );
        console.log("Preflop stage reached");
        // the first active player LEFT of the dealer starts all betting stages
        assertEq(
            room.currentPlayerIndex(),
            1,
            "Starting PreFlop: Current player index is 1(p2, left of the dealer)"
        );
        assertEq(
            room.lastRaiseIndex(),
            1,
            "Starting PreFlop: Last raise index is 1 (default left of the dealer)"
        );
        // TODO: verify that each player can decrypt their cards

        // Start preflop betting player 2 (left of the dealer)
        // player 2 should submit their action
        // test that player 1 cannot submit an action first
        vm.startPrank(player1);
        vm.expectRevert("Not your turn");
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 1);
        assertEq(room.lastRaiseIndex(), 1, "Starting PreFlop: Last raise index is not 1");
        // player 2 should submit their action
        console.log("Player 2 submitting check action");
        vm.startPrank(player2);
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();

        // now player 1 should be able to submit an action
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.lastRaiseIndex(), 1, "Player 2 should be the last raise index");
        console.log("Player 1 submitting check action");
        vm.startPrank(player1);
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();

        // We should be in the reveal flop phase now
        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.RevealFlop));
        // The dealer starts all reveal stages
        assertEq(room.currentPlayerIndex(), 0);
        console.log("Reveal flop stage reached");

        // All players should submit their decryption values for the flop cards
        uint8[] memory cardIndexesFlop = new uint8[](3);
        BigNumber[] memory decryptionValuesFlop = new BigNumber[](3);
        // player 1 should submit their decryption values for flop cards
        vm.startPrank(player1);
        // 2 players, 5th card is burned, 678 are the flop cards
        cardIndexesFlop[0] = 5;
        cardIndexesFlop[1] = 6;
        cardIndexesFlop[2] = 7;
        decryptionValuesFlop[0] = BigNumbers.init(
            hex"276793ac5ed3674ae5eacd668cd4aa7ed00f5525737bf0f535b5610e978f59bbe34e990450984b6c790942a3d2d974238de4d0306825ef31819930361d901394ff780a138f7487a47aedc068935fc4af84e68f71d80b2fa15270f48ca028a047a5802287c68b21a7a4d1699aa75b99bed40c03820154808d69ede119f69172e3e68054839bdc44373692c0b16a40a5f9b7b5cab4427038bd706d1fa859f1364ce133e93939b4859faf46d2c66894ab10e46baa6e8dd4c8ebb6080f39161e29a20420018b19d9d7b42239f671e487db2883295986687a8f8075527ccbe2cc1142e08a603f0ddf54db445d872279515c23ce7cd244c8ebd923063b28e30cc0e2cc",
            false
        );
        decryptionValuesFlop[1] = BigNumbers.init(
            hex"e5544678da5ce0e76dbd029e8a81f633737482c72e9a427613d7b82463400b529a98d350c07cd4df1ba5f076254e9684ab50739711f282a6117254698f039c98dc25c01e386c737bb38ec159957a896acb54b5eaeca126b61470c0aecaa63ae93e4299ad3b48b554d993e1076b3de5b4760138b3df9d7519316cac7321e3ddd5b37f9afbcef7bbbb76f687d2c2b8f6b13e1a5794506d530654f51a5a1a24c3483353b6ee2913f5de2436f206b433e62712f0618fa618be0a8d2e995cd0e07cea56b853e7dfedc3592851cbf58ca2fcdcec61eb9110d742b92b81626fec4501875809b89ed74fd0ce9b64cc63c92f2f17c247b179f6f6aab179fae36673fd6607",
            false
        );
        decryptionValuesFlop[2] = BigNumbers.init(
            hex"d2232c1eb90558d0d20872fdd9d8a85f2066eedf16bd79d55f5c71487fa39f5e58718fb5bef1147d8200ba60d2fc54d9e29a18484f67b3683cf9860e60e87944eb4e29997077b201a5d74cbeff409bab20131c73cb3fad85bf5b58584229b8a4b6a4db6e6010270f46e6762a3be41cf5bd567710e8de8798b12a68b94d2bc6dca350dff25567ee8bef77fe6c13d9617e8900c68929323423cae7bc129f74dac7fa75e1c64147f826758ed1f1866330e9db37e5f803b2de89d993ff88bd4c707eeee3bea283d77c57b46deda4eeca93c5639b218be07f3dc1c1cd493fdea55338bfae295357a38b5dd560fc56dd04b698ebb811f3799f2a32668cf27bccea824d",
            false
        );
        bytes[] memory decryptionValuesBytesFlop = new bytes[](3);
        decryptionValuesBytesFlop[0] = decryptionValuesFlop[0].val;
        decryptionValuesBytesFlop[1] = decryptionValuesFlop[1].val;
        decryptionValuesBytesFlop[2] = decryptionValuesFlop[2].val;
        deckHandler.submitDecryptionValues(cardIndexesFlop, decryptionValuesBytesFlop);
        vm.stopPrank();

        assertEq(room.currentPlayerIndex(), 1);

        // 2 players, 5th card is burned, 678 are the flop cards
        vm.startPrank(player2);
        cardIndexesFlop[0] = 5;
        cardIndexesFlop[1] = 6;
        cardIndexesFlop[2] = 7;
        decryptionValuesFlop[0] = BigNumbers.init(hex"3437", false);
        decryptionValuesFlop[1] = BigNumbers.init(hex"30", false);
        decryptionValuesFlop[2] = BigNumbers.init(hex"3137", false);
        decryptionValuesBytesFlop[0] = decryptionValuesFlop[0].val;
        decryptionValuesBytesFlop[1] = decryptionValuesFlop[1].val;
        decryptionValuesBytesFlop[2] = decryptionValuesFlop[2].val;

        // assert that none of the community cards are not set yet
        // assertEq(room.communityCards(4), "");
        // assertEq(room.communityCards(3), "");
        // assertEq(room.communityCards(2), "");
        // assertEq(room.communityCards(1), "");
        // assertEq(room.communityCards(0), "");

        vm.expectEmit();
        emit DeckHandler.FlopRevealed(player2, "47", "0", "17");
        deckHandler.submitDecryptionValues(cardIndexesFlop, decryptionValuesBytesFlop);
        // assertEq(room.communityCards(4), "");
        // assertEq(room.communityCards(3), "");
        // assertEq(room.communityCards(2), "17");
        // assertEq(room.communityCards(1), "0");
        // assertEq(room.communityCards(0), "47");
        vm.stopPrank();

        // We should be in the flop phase now
        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.Flop));
        assertEq(room.currentPlayerIndex(), 1);
        assertEq(room.lastRaiseIndex(), 1);
        assertEq(room.dealerPosition(), 0);

        // test betting stage, player 2 checks, player 1 raises, player 2 raises, player 1 calls
        vm.startPrank(player2);
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.lastRaiseIndex(), 1);
        assertEq(room.currentStageBet(), 0);
        assertEq(room.pot(), 0);

        vm.startPrank(player1);
        room.submitAction(TexasHoldemRoom.Action.Raise, 10);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 1);
        assertEq(room.lastRaiseIndex(), 0); // p1 raised!
        assertEq(room.currentStageBet(), 10);
        assertEq(room.pot(), 10);

        vm.startPrank(player2);
        vm.expectRevert("Raise must be higher than current bet");
        room.submitAction(TexasHoldemRoom.Action.Raise, 10);
        room.submitAction(TexasHoldemRoom.Action.Raise, 100);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.lastRaiseIndex(), 1); // p2 raised!
        assertEq(room.currentStageBet(), 100); // per player (to stay in the round)
        assertEq(room.pot(), 110); // total pot

        vm.startPrank(player1);
        room.submitAction(TexasHoldemRoom.Action.Call, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0); // End of betting stage, start of reveal stage
        assertEq(room.lastRaiseIndex(), 1);
        assertEq(room.currentStageBet(), 0);
        assertEq(room.pot(), 200);

        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.RevealTurn));

        // All players should submit their decryption values for the turn card
        uint8[] memory cardIndexesTurn = new uint8[](1);
        BigNumber[] memory decryptionValuesTurn = new BigNumber[](1);
        // 2 players, 5th card is burned, 678 are the flop cards,
        // 9th card is burned, 10th card is the turn card
        cardIndexesTurn[0] = 9;
        decryptionValuesTurn[0] = BigNumbers.init(
            hex"d0f5c146bd41f0a9bd7c9627d22638cc9a8582da45f69b12302a79801cdd8f52805c4e4f92df15408cfe71f4b7f292c9201aafbc6929c93ec06e2f94905651689a9108ce8b76d08aa691ef364c6a99a5a60f162da9ca304bd01febdb9673c05b67a62c6c16eed7a8105b0985e42d21eb9c05507cb409c91fba92b63cd22e9e304d83681a9631904a328aee23d094b1dccc6b933b8505be06305fd8d744b0bccfd1474a7d21c8cde2a686138249775e559c1e7204b30f906f1b843b337bb46fbbe0aaba3052377e44c4e0bbe1f33e15f633f37362b96890b101fdeb0aa9fb5517a832c0bb14200b0863251220abfa41442ea767f7c9e20ac160a59d0751961c61",
            false
        );
        bytes[] memory decryptionValuesBytesTurn = new bytes[](1);
        decryptionValuesBytesTurn[0] = decryptionValuesTurn[0].val;
        vm.startPrank(player1);
        deckHandler.submitDecryptionValues(cardIndexesTurn, decryptionValuesBytesTurn);
        vm.stopPrank();

        assertEq(room.currentPlayerIndex(), 1);
        vm.startPrank(player2);
        cardIndexesTurn[0] = 9;
        decryptionValuesTurn[0] = BigNumbers.init(hex"3439", false);
        decryptionValuesBytesTurn[0] = decryptionValuesTurn[0].val;
        vm.expectEmit();
        emit DeckHandler.TurnRevealed(player2, "49");
        deckHandler.submitDecryptionValues(cardIndexesTurn, decryptionValuesBytesTurn);
        // assertEq(room.communityCards(4), "");
        // assertEq(room.communityCards(3), "49");
        // assertEq(room.communityCards(2), "17");
        // assertEq(room.communityCards(1), "0");
        // assertEq(room.communityCards(0), "47");
        vm.stopPrank();

        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.Turn));
        assertEq(room.currentPlayerIndex(), 1);

        vm.startPrank(player2);
        room.submitAction(TexasHoldemRoom.Action.Raise, 100);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.lastRaiseIndex(), 1);
        assertEq(room.currentStageBet(), 100);
        assertEq(room.pot(), 300);

        vm.startPrank(player1);
        room.submitAction(TexasHoldemRoom.Action.Call, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.currentStageBet(), 0);
        assertEq(room.pot(), 400);

        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.RevealRiver));

        // All players should submit their decryption values for the river card
        uint8[] memory cardIndexesRiver = new uint8[](1);
        BigNumber[] memory decryptionValuesRiver = new BigNumber[](1);
        // 2 players, 9th card is burned, 10th card is the turn card
        // 11th card is burned, 12th card is the river card
        cardIndexesRiver[0] = 11;
        decryptionValuesRiver[0] = BigNumbers.init(
            hex"e1fb821599e8e9be49871f6a45f8ccf9624f825004ce9ff8dec0e1846c91d33e21d74e9d3fe91dbcd805b04a7b38185f8b856a1ebce2ce2dff650815736821ba87ebbbf6846ccbd31e8de3d7b552e0674aab0361e7d2120e4c37adec7d6d0c2ded529df7339b01ecbf78b403e2bf7e676396255f25c91ee7abb6345a66c41721f03351ec8cb64849428c45ec2facb460a380d2e6211b73a8ee93ab06971b1f759a6c9262de53cbb6ee6796b066a059798d5234f301c02c6af57faac5501e62c95cfede5d37625dc1c7b710cf33ed89aa801d8251135eeea6de66a2db96a70ecf55cf013f279fcb7011ee96db895c2a32682731cfa7b95402c961688a3ae44196",
            false
        );
        bytes[] memory decryptionValuesBytesRiver = new bytes[](1);
        decryptionValuesBytesRiver[0] = decryptionValuesRiver[0].val;
        vm.startPrank(player1);
        deckHandler.submitDecryptionValues(cardIndexesRiver, decryptionValuesBytesRiver);
        vm.stopPrank();

        assertEq(room.currentPlayerIndex(), 1);
        vm.startPrank(player2);
        cardIndexesRiver[0] = 11;
        decryptionValuesRiver[0] = BigNumbers.init(hex"3334", false);
        decryptionValuesBytesRiver[0] = decryptionValuesRiver[0].val;
        vm.expectEmit();
        emit DeckHandler.RiverRevealed(player2, "34");
        deckHandler.submitDecryptionValues(cardIndexesRiver, decryptionValuesBytesRiver);
        // assertEq(room.communityCards(4), "34");
        // assertEq(room.communityCards(3), "49");
        // assertEq(room.communityCards(2), "17");
        // assertEq(room.communityCards(1), "0");
        // assertEq(room.communityCards(0), "47");
        vm.stopPrank();

        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.River));
        assertEq(room.currentPlayerIndex(), 1);

        vm.startPrank(player2);
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);
        assertEq(room.lastRaiseIndex(), 1);
        assertEq(room.currentStageBet(), 0);
        assertEq(room.pot(), 400);

        vm.startPrank(player1);
        room.submitAction(TexasHoldemRoom.Action.Check, 0);
        vm.stopPrank();
        assertEq(room.currentPlayerIndex(), 0);

        assertEq(uint256(room.stage()), uint256(TexasHoldemRoom.GameStage.Showdown));
        assertEq(room.currentPlayerIndex(), 0);
        // reveal cards?
        // submit private key r's and mid func calcs. verify cards. compare hands
        console.log("Player1 is revealing their cards");
        vm.startPrank(player1);
        CryptoUtils.EncryptedCard memory encryptedCard1 =
            CryptoUtils.EncryptedCard({ c1: c1p1, c2: deckHandler.getEncrypedCard(0) });
        CryptoUtils.EncryptedCard memory encryptedCard2 =
            CryptoUtils.EncryptedCard({ c1: c1p1, c2: deckHandler.getEncrypedCard(2) });

        // don't check equality of cards as we don't know them yet
        vm.expectEmit(address(deckHandler));
        emit DeckHandler.PlayerCardsRevealed(
            address(player1),
            "21",
            "27",
            PokerHandEvaluatorv2.HandRank.ThreeOfAKind,
            400000010120006
        );
        // (string memory card1, string memory card2) =
        //     room.revealMyCards(encryptedCard1, encryptedCard2, privateKey1, c1Inverse1);
        (string memory card1, string memory card2) = deckHandler.revealMyCards(
            c1p1.val,
            // deckHandler.getEncrypedCard(0).val,
            // deckHandler.getEncrypedCard(2).val,
            privateKey1.val,
            c1InversePowPrivate1.val
        );
        vm.stopPrank();
        console.log("card1: %s %s", card1, pokerHandEvaluator.stringToHumanReadable(card1));
        console.log("card2: %s %s", card2, pokerHandEvaluator.stringToHumanReadable(card2));
        // assert that card1 is in the deck (range 0 to 51)
        vm.assertTrue(pokerHandEvaluator.parseInt(card1) < 52);
        vm.assertTrue(pokerHandEvaluator.parseInt(card2) < 52);
        TexasHoldemRoom.Player[] memory players = room.getPlayers();
        vm.assertEq(players[0].handScore, 400000010120006);

        console.log("Player2 is revealing their cards");
        vm.startPrank(player2);
        CryptoUtils.EncryptedCard memory encryptedCard3 =
            CryptoUtils.EncryptedCard({ c1: c1p2, c2: deckHandler.getEncrypedCard(1) });
        CryptoUtils.EncryptedCard memory encryptedCard4 =
            CryptoUtils.EncryptedCard({ c1: c1p2, c2: deckHandler.getEncrypedCard(3) });

        // don't check equality of cards as we don't know them yet
        vm.expectEmit(address(deckHandler));
        emit DeckHandler.PlayerCardsRevealed(
            address(player2), "12", "51", PokerHandEvaluatorv2.HandRank.TwoPair, 300000014100012
        );
        // also expect a winner event to be emitted
        // vm.expectEmit(address(room));
        // emit TexasHoldemRoom.RoundWinner(address(player2), 1);
        // (string memory card3, string memory card4) =
        //     room.revealMyCards(encryptedCard3, encryptedCard4, privateKey2, c1Inverse2);
        (string memory card3, string memory card4) = deckHandler.revealMyCards(
            c1p2.val,
            // deckHandler.getEncrypedCard(1).val,
            // deckHandler.getEncrypedCard(3).val,
            privateKey2.val,
            c1InversePowPrivate2.val
        );
        vm.stopPrank();
        console.log("card3: %s %s", card3, pokerHandEvaluator.stringToHumanReadable(card3));
        console.log("card4: %s %s", card4, pokerHandEvaluator.stringToHumanReadable(card4));
        // assert that card3 is in the deck (range 0 to 51)
        vm.assertTrue(pokerHandEvaluator.parseInt(card3) < 52);
        // assert that card4 is in the deck (range 0 to 51)
        vm.assertTrue(pokerHandEvaluator.parseInt(card4) < 52);
        players = room.getPlayers();
        // handScores get set to 0 after a new round!
        vm.assertEq(players[1].handScore, 0);
        vm.assertEq(players[0].handScore, 0);
        // todo: check cards exactly match an shuffled deck's cards (no dupes too)

        //         bytes memory expectedMessageBytes = hex"30";
        //        BigNumber memory testMessage = BigNumbers.init(expectedMessageBytes, false);
        // assertEq(BigNumbers.eq(decryptedMessage, testMessage), true);
        // compare cards
    }

    // function test_JoinGameFailures() public {
    //     // Test joining twice
    //     vm.startPrank(player1);
    //     room.joinGame();
    //     vm.expectRevert("Already in game");
    //     room.joinGame();
    //     vm.stopPrank();
    // }

    // function test_StartNewHand() public {
    //     // Setup: Join two players
    //     vm.prank(player1);
    //     room.joinGame();
    //     vm.prank(player2);
    //     room.joinGame();

    //     // Start new hand
    //     vm.prank(player1);
    //     room.startNewHand();

    //     // Verify game state
    //     (
    //         TexasHoldemRoom.GameStage stage,
    //         uint256 pot,
    //         uint256 currentBet,
    //         uint256 smallBlind,
    //         uint256 bigBlind,
    //         uint256 dealerPosition,
    //         uint256 currentPlayerIndex,
    //         uint256 lastRaiseIndex,
    //         uint256 revealedCommunityCards
    //     ) = room.gameState();

    //     assertEq(uint256(stage), uint256(TexasHoldemRoom.GameStage.Preflop));
    //     assertEq(pot, SMALL_BLIND + SMALL_BLIND * 2); // SB + BB
    //     assertEq(currentBet, SMALL_BLIND * 2); // BB amount
    //     assertEq(dealerPosition, 0);
    //     assertEq(currentPlayerIndex, 0); // First player after BB
    // }

    // function test_StartNewHandFailures() public {
    //     // Test starting with only one player
    //     vm.startPrank(player1);
    //     room.joinGame();
    //     vm.expectRevert("Not enough players");
    //     room.startNewHand();
    //     vm.stopPrank();
    // }

    // function test_PlayerActions() public {
    //     // Setup: Join three players and start hand
    //     vm.prank(player1);
    //     room.joinGame();
    //     vm.prank(player2);
    //     room.joinGame();
    //     vm.prank(player3);
    //     room.joinGame();

    //     vm.prank(player1);
    //     room.startNewHand();

    //     // Test fold action
    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Fold, 0);

    //     // Test call action
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Call, 0);

    //     // Test raise action
    //     vm.prank(player3);
    //     room.submitAction(TexasHoldemRoom.Action.Raise, SMALL_BLIND * 4);

    //     // Verify game state after actions
    //     (, uint256 pot, uint256 currentBet,,,,,, uint256 revealedCommunityCards) = room.gameState();

    //     assertEq(currentBet, SMALL_BLIND * 4);
    //     assertEq(pot, SMALL_BLIND + SMALL_BLIND * 2 + SMALL_BLIND * 4);
    // }

    // function test_PlayerActionFailures() public {
    //     // Setup game
    //     vm.prank(player1);
    //     room.joinGame();
    //     vm.prank(player2);
    //     room.joinGame();

    //     vm.prank(player1);
    //     room.startNewHand();

    //     // Test acting out of turn
    //     vm.prank(player2);
    //     vm.expectRevert("Not your turn");
    //     room.submitAction(TexasHoldemRoom.Action.Call, 0);

    //     // Test invalid raise amount
    //     vm.prank(player1);
    //     vm.expectRevert("Raise must be higher than current bet");
    //     room.submitAction(TexasHoldemRoom.Action.Raise, SMALL_BLIND);
    // }

    // function test_GameProgression() public {
    //     // Setup game
    //     vm.prank(player1);
    //     room.joinGame();
    //     vm.prank(player2);
    //     room.joinGame();

    //     vm.prank(player1);
    //     room.startNewHand();

    //     // Submit actions to progress through stages
    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Call, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     // Verify we're in flop stage
    //     (TexasHoldemRoom.GameStage stage,,,,,,,, uint256 revealedCommunityCards) = room.gameState();
    //     assertEq(uint256(stage), uint256(TexasHoldemRoom.GameStage.Flop));

    //     // Continue through turn and river
    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     (stage,,,,,,,, revealedCommunityCards) = room.gameState();
    //     assertEq(uint256(stage), uint256(TexasHoldemRoom.GameStage.Turn));

    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     (stage,,,,,,,, revealedCommunityCards) = room.gameState();
    //     assertEq(uint256(stage), uint256(TexasHoldemRoom.GameStage.River));
    // }

    // function test_HandReveal() public {
    //     // Setup game
    //     vm.prank(player1);
    //     room.joinGame();
    //     vm.prank(player2);
    //     room.joinGame();

    //     vm.prank(player1);
    //     room.startNewHand();

    //     // Progress to showdown
    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Call, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     vm.prank(player1);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);
    //     vm.prank(player2);
    //     room.submitAction(TexasHoldemRoom.Action.Check, 0);

    //     // Test hand reveal
    //     PokerHandEvaluator.Card[2] memory cards = [
    //         PokerHandEvaluator.Card(14, 0), // Ace of Hearts
    //         PokerHandEvaluator.Card(13, 0) // King of Hearts
    //     ];
    //     bytes32 secret = bytes32(uint256(1));
    //     bytes32 commitment = keccak256(abi.encode(cards, secret));

    //     vm.startPrank(player1);
    //     room.submitCardsCommitment(commitment);
    //     room.revealCards(cards, secret);
    //     vm.stopPrank();
    // }
}
